CCS PCM C Compiler, Version 5.091, 13314               22-jul.-21 09:53

               Filename:   C:\Users\jymcl\Documents\Chapingo\6 Semestre\Sistemas digitales embebidos\Practica10\practica10.lst

               ROM used:   115 words (6%)
                           Largest free fragment is 1933
               RAM used:   5 (2%) at main() level
                           6 (3%) worst case
               Stack used: 1 locations
               Stack size: 8

0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <practica10.h>
.................... #include <16F628A.h>
.................... //////////// Standard Header file for the PIC16F628A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F628A
.................... 
.................... #list
.................... 
.................... #use delay(crystal=4MHz)
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... 
.................... 
.................... #use standard_io(b)
.................... #define DELAY 200
.................... 
.................... void main()
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  MOVLW  07
001D:  MOVWF  1F
001E:  BCF    03.7
.................... {
....................    set_tris_b(0b00000000);
001F:  MOVLW  00
0020:  BSF    03.5
0021:  MOVWF  06
....................    while(TRUE)
....................    {
....................       output_b(0x40);
0022:  CLRF   06
0023:  MOVLW  40
0024:  BCF    03.5
0025:  MOVWF  06
....................       delay_ms(DELAY);
0026:  MOVLW  C8
0027:  MOVWF  21
0028:  CALL   004
....................       output_b(0x79);
0029:  BSF    03.5
002A:  CLRF   06
002B:  MOVLW  79
002C:  BCF    03.5
002D:  MOVWF  06
....................       delay_ms(DELAY);
002E:  MOVLW  C8
002F:  MOVWF  21
0030:  CALL   004
....................       output_b(0x24);
0031:  BSF    03.5
0032:  CLRF   06
0033:  MOVLW  24
0034:  BCF    03.5
0035:  MOVWF  06
....................       delay_ms(DELAY);
0036:  MOVLW  C8
0037:  MOVWF  21
0038:  CALL   004
....................       output_b(0x30);
0039:  BSF    03.5
003A:  CLRF   06
003B:  MOVLW  30
003C:  BCF    03.5
003D:  MOVWF  06
....................       delay_ms(DELAY);
003E:  MOVLW  C8
003F:  MOVWF  21
0040:  CALL   004
....................       output_b(0x19);
0041:  BSF    03.5
0042:  CLRF   06
0043:  MOVLW  19
0044:  BCF    03.5
0045:  MOVWF  06
....................       delay_ms(DELAY);
0046:  MOVLW  C8
0047:  MOVWF  21
0048:  CALL   004
....................       output_b(0x12);
0049:  BSF    03.5
004A:  CLRF   06
004B:  MOVLW  12
004C:  BCF    03.5
004D:  MOVWF  06
....................       delay_ms(DELAY);
004E:  MOVLW  C8
004F:  MOVWF  21
0050:  CALL   004
....................       output_b(0x02);
0051:  BSF    03.5
0052:  CLRF   06
0053:  MOVLW  02
0054:  BCF    03.5
0055:  MOVWF  06
....................       delay_ms(DELAY);
0056:  MOVLW  C8
0057:  MOVWF  21
0058:  CALL   004
....................       output_b(0x78);
0059:  BSF    03.5
005A:  CLRF   06
005B:  MOVLW  78
005C:  BCF    03.5
005D:  MOVWF  06
....................       delay_ms(DELAY);
005E:  MOVLW  C8
005F:  MOVWF  21
0060:  CALL   004
....................       output_b(0x00);
0061:  BSF    03.5
0062:  CLRF   06
0063:  BCF    03.5
0064:  CLRF   06
....................       delay_ms(DELAY);
0065:  MOVLW  C8
0066:  MOVWF  21
0067:  CALL   004
....................       output_b(0x18);
0068:  BSF    03.5
0069:  CLRF   06
006A:  MOVLW  18
006B:  BCF    03.5
006C:  MOVWF  06
....................       delay_ms(DELAY);
006D:  MOVLW  C8
006E:  MOVWF  21
006F:  CALL   004
0070:  BSF    03.5
0071:  GOTO   022
....................       
....................       //TODO: User Code
....................    }
.................... 
.................... }
0072:  SLEEP

Configuration Fuses:
   Word  1: 3F61   NOWDT PUT XT MCLR BROWNOUT NOLVP NOCPD NOPROTECT
