D G "__PCM__" 0 23 ""5.091""
D G "__DEVICE__" 0 23 "84"
D G "__DATE__" 0 23 ""5-Jul-21""
D G "__TIME__" 0 23 ""15:42:40""
D G "_UNICODE" 0 23 ""?""
D G "__EVAL" 0 23 ""?"" "Standard Header file for the PIC16F84A device ////////////////"
c L "set_tris_a" 2 3 6 "FUNCTION"
f N "set_tris_a" 2 35 ""
v L "value" 2 35 "int8" `54 
f B "set_tris_a" 2 35 "void(int8 value)" `53 
f N "set_tris_b" 2 36 ""
v L "value" 2 36 "int8" `56 
f B "set_tris_b" 2 36 "void(int8 value)" `55 
f N "get_tris_a" 2 37 ""
f B "get_tris_a" 2 37 "int8()" `57 
f N "get_tris_b" 2 38 ""
f B "get_tris_b" 2 38 "int8()" `58 
f N "output_a" 2 39 ""
v L "value" 2 39 "int8" `60 
f B "output_a" 2 39 "void(int8 value)" `59 
f N "output_b" 2 40 ""
v L "value" 2 40 "int8" `62 
f B "output_b" 2 40 "void(int8 value)" `61 
f N "input_a" 2 41 ""
f B "input_a" 2 41 "int8()" `63 
f N "input_b" 2 42 ""
f B "input_b" 2 42 "int8()" `64 
f N "input_change_a" 2 43 ""
f B "input_change_a" 2 43 "int8()" `65 
f N "input_change_b" 2 44 ""
f B "input_change_b" 2 44 "int8()" `66 
f N "port_b_pullups" 2 45 ""
v L "value" 2 45 "int8" `68 
f B "port_b_pullups" 2 45 "void(int8 value)" `67 
f N "input" 2 46 ""
v L "pin" 2 46 "int16" `70 
f B "input" 2 46 "int8(int16 pin)" `69 
f N "input_state" 2 47 ""
v L "pin" 2 47 "int16" `72 
f B "input_state" 2 47 "int8(int16 pin)" `71 
f N "output_low" 2 48 ""
v L "pin" 2 48 "int16" `74 
f B "output_low" 2 48 "void(int16 pin)" `73 
f N "output_high" 2 49 ""
v L "pin" 2 49 "int16" `76 
f B "output_high" 2 49 "void(int16 pin)" `75 
f N "output_toggle" 2 50 ""
v L "pin" 2 50 "int16" `78 
f B "output_toggle" 2 50 "void(int16 pin)" `77 
f N "output_bit" 2 51 ""
v L "pin" 2 51 "int16" `80 
v L "level" 2 51 "int8" `81 
f B "output_bit" 2 51 "void(int16 pin,int8 level)" `79 
f N "output_float" 2 52 ""
v L "pin" 2 52 "int16" `83 
f B "output_float" 2 52 "void(int16 pin)" `82 
f N "output_drive" 2 53 ""
v L "pin" 2 53 "int16" `85 
f B "output_drive" 2 53 "void(int16 pin)" `84  "Constants used to identify pins in the above are:"
d G "PIN_A0" 2 57 "40"
d G "PIN_A1" 2 58 "41"
d G "PIN_A2" 2 59 "42"
d G "PIN_A3" 2 60 "43"
d G "PIN_A4" 2 61 "44"
d G "PIN_B0" 2 63 "48"
d G "PIN_B1" 2 64 "49"
d G "PIN_B2" 2 65 "50"
d G "PIN_B3" 2 66 "51"
d G "PIN_B4" 2 67 "52"
d G "PIN_B5" 2 68 "53"
d G "PIN_B6" 2 69 "54"
d G "PIN_B7" 2 70 "55"
d G "FALSE" 2 73 "0"
d G "TRUE" 2 74 "1"
d G "BYTE" 2 76 "int8"
d G "BOOLEAN" 2 77 "int1"
d G "getc" 2 79 "getch"
d G "fgetc" 2 80 "getch"
d G "getchar" 2 81 "getch"
d G "putc" 2 82 "putchar"
d G "fputc" 2 83 "putchar"
d G "fgets" 2 84 "gets"
d G "fputs" 2 85 "puts"
c L "output_drive" 2 3 3 "FUNCTION"
f N "restart_cause" 2 90 ""
f B "restart_cause" 2 90 "int8()" `86 
f N "reset_cpu" 2 91 ""
f B "reset_cpu" 2 91 "void()" `87 
f N "sleep" 2 92 ""
f B "sleep" 2 92 "void()" `88  "Constants returned from RESTART_CAUSE() are:"
d G "WDT_FROM_SLEEP" 2 94 "3"
d G "WDT_TIMEOUT" 2 95 "11"
d G "MCLR_FROM_SLEEP" 2 96 "16"
d G "MCLR_FROM_RUN" 2 97 "27"
d G "NORMAL_POWER_UP" 2 98 "27"
d G "BROWNOUT_RESTART" 2 99 "26"
c L "sleep" 2 3 5 "FUNCTION"
f N "setup_timer_0" 2 107 ""
v L "mode" 2 107 "int8" `90 
f B "setup_timer_0" 2 107 "void(int8 mode)" `89 
f N "set_timer0" 2 108 ""
v L "value" 2 108 "int8" `92 
f B "set_timer0" 2 108 "void(int8 value)" `91 
f N "get_timer0" 2 109 ""
f B "get_timer0" 2 109 "int8()" `93 
f N "setup_counters" 2 110 ""
v L "mode" 2 110 "int8" `95 
v L "prescaler" 2 110 "int8" `96 
f B "setup_counters" 2 110 "void(int8 mode,int8 prescaler)" `94 
f N "set_rtcc" 2 111 ""
v L "value" 2 111 "int8" `98 
f B "set_rtcc" 2 111 "void(int8 value)" `97 
f N "get_rtcc" 2 112 ""
f B "get_rtcc" 2 112 "int8()" `99  "Constants used for SETUP_TIMER_0() are:"
d G "T0_INTERNAL" 2 114 "0"
d G "T0_EXT_L_TO_H" 2 115 "32"
d G "T0_EXT_H_TO_L" 2 116 "48"
d G "T0_DIV_1" 2 118 "8"
d G "T0_DIV_2" 2 119 "0"
d G "T0_DIV_4" 2 120 "1"
d G "T0_DIV_8" 2 121 "2"
d G "T0_DIV_16" 2 122 "3"
d G "T0_DIV_32" 2 123 "4"
d G "T0_DIV_64" 2 124 "5"
d G "T0_DIV_128" 2 125 "6"
d G "T0_DIV_256" 2 126 "7"
d G "T0_8_BIT" 2 129 "0"
d G "RTCC_INTERNAL" 2 133 "0"
d G "RTCC_EXT_L_TO_H" 2 134 "32"
d G "RTCC_EXT_H_TO_L" 2 135 "48"
d G "RTCC_DIV_1" 2 136 "8"
d G "RTCC_DIV_2" 2 137 "0"
d G "RTCC_DIV_4" 2 138 "1"
d G "RTCC_DIV_8" 2 139 "2"
d G "RTCC_DIV_16" 2 140 "3"
d G "RTCC_DIV_32" 2 141 "4"
d G "RTCC_DIV_64" 2 142 "5"
d G "RTCC_DIV_128" 2 143 "6"
d G "RTCC_DIV_256" 2 144 "7"
d G "RTCC_8_BIT" 2 145 "0"
c L "get_rtcc" 2 3 8 "FUNCTION"
f N "setup_wdt" 2 156 ""
v L "mode" 2 156 "int16" `101 
f B "setup_wdt" 2 156 "void(int16 mode)" `100 
f N "restart_wdt" 2 157 ""
f B "restart_wdt" 2 157 "void()" `102  "Constants used for SETUP_WDT() are:"
d G "WDT_18MS" 2 160 "8"
d G "WDT_36MS" 2 161 "9"
d G "WDT_72MS" 2 162 "10"
d G "WDT_144MS" 2 163 "11"
d G "WDT_288MS" 2 164 "12"
d G "WDT_576MS" 2 165 "13"
d G "WDT_1152MS" 2 166 "14"
d G "WDT_2304MS" 2 167 "15"
c L "restart_wdt" 2 3 3 "FUNCTION"
f N "abs" 2 175 ""
v L "x" 2 175 "sint8" `104 
f B "abs" 2 175 "sint8(sint8 x)" `103 
f N "abs" 2 176 ""
v L "x" 2 176 "sint16" `106 
f B "abs" 2 176 "sint16(sint16 x)" `105 
f N "abs" 2 177 ""
v L "x" 2 177 "sint32" `108 
f B "abs" 2 177 "sint32(sint32 x)" `107 
f N "abs" 2 178 ""
v L "x" 2 178 "float" `110 
f B "abs" 2 178 "float(float x)" `109 
f N "_mul" 2 179 ""
v L "??65535" 2 179 "int8" `112 
v L "??65535" 2 179 "int8" `113 
f B "_mul" 2 179 "int16(int8 ,int8 )" `111 
f N "_mul" 2 180 ""
v L "??65535" 2 180 "sint8" `115 
v L "??65535" 2 180 "sint8" `116 
f B "_mul" 2 180 "sint16(sint8 ,sint8 )" `114 
f N "_mul" 2 181 ""
v L "??65535" 2 181 "int16" `118 
v L "??65535" 2 181 "int16" `119 
f B "_mul" 2 181 "int32(int16 ,int16 )" `117 
f N "_mul" 2 182 ""
v L "??65535" 2 182 "sint16" `121 
v L "??65535" 2 182 "sint16" `122 
f B "_mul" 2 182 "sint32(sint16 ,sint16 )" `120  "Memory Manipulation Prototypes:"
f N "read_bank" 2 185 ""
v L "bank" 2 185 "int8" `124 
v L "offset" 2 185 "int8" `125 
f B "read_bank" 2 185 "int8(int8 bank,int8 offset)" `123 
f N "write_bank" 2 186 ""
v L "bank" 2 186 "int8" `127 
v L "offset" 2 186 "int8" `128 
v L "value" 2 186 "int8" `129 
f B "write_bank" 2 186 "void(int8 bank,int8 offset,int8 value)" `126 
f N "strcpy" 2 187 ""
v L "dest" 2 187 "*int8" `131 
v L "src" 2 187 "*int8" `132 
f B "strcpy" 2 187 "void(*int8 dest,*int8 src)" `130 
f N "memset" 2 188 ""
v L "destination" 2 188 "*int8" `134 
v L "value" 2 188 "int8" `135 
v L "num" 2 188 "int16" `136 
f B "memset" 2 188 "void(*int8 destination,int8 value,int16 num)" `133 
f N "memcpy" 2 189 ""
v L "destination" 2 189 "*int8" `138 
v L "source" 2 189 "*int8" `139 
v L "num" 2 189 "int16" `140 
f B "memcpy" 2 189 "void(*int8 destination,*int8 source,int16 num)" `137  "String Prototypes:"
f N "toupper" 2 192 ""
v L "cvalue" 2 192 "int8" `142 
f B "toupper" 2 192 "int8(int8 cvalue)" `141 
f N "tolower" 2 193 ""
v L "cvalue" 2 193 "int8" `144 
f B "tolower" 2 193 "int8(int8 cvalue)" `143 
f N "sprintf" 2 194 ""
v L "string" 2 194 "*int8" `146 
v L "cstring" 2 194 "*int8" `147 
f B "sprintf" 2 194 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `145  "Data Manipulators Prototypes:"
f N "shift_left" 2 197 ""
v L "address" 2 197 "*int8" `150 
v L "bytes" 2 197 "int8" `151 
v L "value" 2 197 "int8" `152 
f B "shift_left" 2 197 "int8(*int8 address,int8 bytes,int8 value)" `149 
f N "shift_right" 2 198 ""
v L "address" 2 198 "*int8" `154 
v L "bytes" 2 198 "int8" `155 
v L "value" 2 198 "int8" `156 
f B "shift_right" 2 198 "int8(*int8 address,int8 bytes,int8 value)" `153 
f N "rotate_left" 2 199 ""
v L "address" 2 199 "*int8" `158 
v L "bytes" 2 199 "int8" `159 
f B "rotate_left" 2 199 "void(*int8 address,int8 bytes)" `157 
f N "rotate_right" 2 200 ""
v L "address" 2 200 "*int8" `161 
v L "bytes" 2 200 "int8" `162 
f B "rotate_right" 2 200 "void(*int8 address,int8 bytes)" `160 
f N "swap" 2 201 ""
v L "value" 2 201 "int8" `164 
f B "swap" 2 201 "void(int8 value)" `163 
f N "make8" 2 202 ""
v L "var" 2 202 "int16" `166 
v L "offset" 2 202 "int8" `167 
f B "make8" 2 202 "int8(int16 var,int8 offset)" `165 
f N "make8" 2 203 ""
v L "var" 2 203 "int32" `169 
v L "offset" 2 203 "int8" `170 
f B "make8" 2 203 "int8(int32 var,int8 offset)" `168 
f N "make16" 2 204 ""
v L "varhigh" 2 204 "int8" `172 
v L "varlow" 2 204 "int8" `173 
f B "make16" 2 204 "int16(int8 varhigh,int8 varlow)" `171 
f N "make32" 2 205 ""
v L "var1" 2 205 "int16" `175 
f B "make32" 2 205 "int32(int16 var1)" `174 
f N "make32" 2 206 ""
v L "var1" 2 206 "int16" `177 
v L "var2" 2 206 "int16" `178 
f B "make32" 2 206 "int32(int16 var1,int16 var2)" `176 
f N "make32" 2 207 ""
v L "var1" 2 207 "int16" `180 
v L "var2" 2 207 "int8" `181 
f B "make32" 2 207 "int32(int16 var1,int8 var2)" `179 
f N "make32" 2 208 ""
v L "var1" 2 208 "int16" `183 
v L "var2" 2 208 "int8" `184 
v L "var3" 2 208 "int8" `185 
f B "make32" 2 208 "int32(int16 var1,int8 var2,int8 var3)" `182 
f N "make32" 2 209 ""
v L "var1" 2 209 "int8" `187 
f B "make32" 2 209 "int32(int8 var1)" `186 
f N "make32" 2 210 ""
v L "var1" 2 210 "int8" `189 
v L "var2" 2 210 "int8" `190 
f B "make32" 2 210 "int32(int8 var1,int8 var2)" `188 
f N "make32" 2 211 ""
v L "var1" 2 211 "int8" `192 
v L "var2" 2 211 "int8" `193 
v L "var3" 2 211 "int8" `194 
f B "make32" 2 211 "int32(int8 var1,int8 var2,int8 var3)" `191 
f N "make32" 2 212 ""
v L "var1" 2 212 "int8" `196 
v L "var2" 2 212 "int8" `197 
v L "var3" 2 212 "int8" `198 
v L "var4" 2 212 "int8" `199 
f B "make32" 2 212 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `195 
f N "make32" 2 213 ""
v L "var1" 2 213 "int8" `201 
v L "var2" 2 213 "int16" `202 
f B "make32" 2 213 "int32(int8 var1,int16 var2)" `200 
f N "make32" 2 214 ""
v L "var1" 2 214 "int8" `204 
v L "var2" 2 214 "int16" `205 
v L "var3" 2 214 "int8" `206 
f B "make32" 2 214 "int32(int8 var1,int16 var2,int8 var3)" `203 
f N "make32" 2 215 ""
v L "var1" 2 215 "int8" `208 
v L "var2" 2 215 "int8" `209 
v L "var3" 2 215 "int16" `210 
f B "make32" 2 215 "int32(int8 var1,int8 var2,int16 var3)" `207 
f N "bit_set" 2 216 ""
v L "var" 2 216 "int8" `212 
v L "bit" 2 216 "int8" `213 
f B "bit_set" 2 216 "void(int8 var,int8 bit)" `211 
f N "bit_set" 2 217 ""
v L "var" 2 217 "int16" `215 
v L "bit" 2 217 "int8" `216 
f B "bit_set" 2 217 "void(int16 var,int8 bit)" `214 
f N "bit_set" 2 218 ""
v L "var" 2 218 "int32" `218 
v L "bit" 2 218 "int8" `219 
f B "bit_set" 2 218 "void(int32 var,int8 bit)" `217 
f N "bit_clear" 2 219 ""
v L "var" 2 219 "int8" `221 
v L "bit" 2 219 "int8" `222 
f B "bit_clear" 2 219 "void(int8 var,int8 bit)" `220 
f N "bit_clear" 2 220 ""
v L "var" 2 220 "int16" `224 
v L "bit" 2 220 "int8" `225 
f B "bit_clear" 2 220 "void(int16 var,int8 bit)" `223 
f N "bit_clear" 2 221 ""
v L "var" 2 221 "int32" `227 
v L "bit" 2 221 "int8" `228 
f B "bit_clear" 2 221 "void(int32 var,int8 bit)" `226 
f N "bit_test" 2 222 ""
v L "var" 2 222 "int8" `230 
v L "bit" 2 222 "int8" `231 
f B "bit_test" 2 222 "int8(int8 var,int8 bit)" `229 
f N "bit_test" 2 223 ""
v L "var" 2 223 "int16" `233 
v L "bit" 2 223 "int8" `234 
f B "bit_test" 2 223 "int8(int16 var,int8 bit)" `232 
f N "bit_test" 2 224 ""
v L "var" 2 224 "int32" `236 
v L "bit" 2 224 "int8" `237 
f B "bit_test" 2 224 "int8(int32 var,int8 bit)" `235  "#use delay() Prototypes:"
f N "delay_cycles" 2 227 ""
v L "count" 2 227 "int8" `239 
f B "delay_cycles" 2 227 "void(int8 count)" `238 
f N "delay_ms" 2 228 ""
v L "time" 2 228 "int16" `241 
f B "delay_ms" 2 228 "void(int16 time)" `240 
f N "delay_us" 2 229 ""
v L "time" 2 229 "int16" `243 
f B "delay_us" 2 229 "void(int16 time)" `242  "#use rs232() Prototypes:"
f N "putchar" 2 232 ""
v L "cdata" 2 232 "int8" `245 
f B "putchar" 2 232 "void(int8 cdata)" `244 
f N "putchar" 2 233 ""
v L "cdata" 2 233 "int8" `247 
v L "stream" 2 233 "int8" `248 
f B "putchar" 2 233 "void(int8 cdata,int8 stream)" `246 
f N "puts" 2 234 ""
v L "string" 2 234 "*int8" `250 
f B "puts" 2 234 "void(*int8 string)" `249 
f N "puts" 2 235 ""
v L "string" 2 235 "*int8" `252 
v L "stream" 2 235 "int8" `253 
f B "puts" 2 235 "void(*int8 string,int8 stream)" `251 
f N "getch" 2 236 ""
f B "getch" 2 236 "int8()" `254 
f N "getch" 2 237 ""
v L "stream" 2 237 "int8" `256 
f B "getch" 2 237 "int8(int8 stream)" `255 
f N "gets" 2 238 ""
v L "string" 2 238 "*int8" `258 
f B "gets" 2 238 "void(*int8 string)" `257 
f N "gets" 2 239 ""
v L "string" 2 239 "*int8" `260 
v L "stream" 2 239 "int8" `261 
f B "gets" 2 239 "void(*int8 string,int8 stream)" `259 
f N "kbhit" 2 240 ""
f B "kbhit" 2 240 "int8()" `262 
f N "kbhit" 2 241 ""
v L "stream" 2 241 "int8" `264 
f B "kbhit" 2 241 "int8(int8 stream)" `263 
f N "printf" 2 242 ""
v L "string" 2 242 "*int8" `266 
f B "printf" 2 242 "void(*int8 string,*int8 _VA_LIST)" `265 
f N "fprintf" 2 243 ""
v L "stream" 2 243 "int8" `269 
v L "string" 2 243 "*int8" `270 
f B "fprintf" 2 243 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `268 
f N "putc_send" 2 244 ""
f B "putc_send" 2 244 "void()" `272 
f N "fputc_send" 2 245 ""
v L "stream" 2 245 "int8" `274 
f B "fputc_send" 2 245 "void(int8 stream)" `273 
f N "rcv_buffer_full" 2 246 ""
f B "rcv_buffer_full" 2 246 "int8()" `275 
f N "rcv_buffer_full" 2 247 ""
v L "stream" 2 247 "int8" `277 
f B "rcv_buffer_full" 2 247 "int8(int8 stream)" `276 
f N "rcv_buffer_bytes" 2 248 ""
f B "rcv_buffer_bytes" 2 248 "int16()" `278 
f N "rcv_buffer_bytes" 2 249 ""
v L "stream" 2 249 "int8" `280 
f B "rcv_buffer_bytes" 2 249 "int16(int8 stream)" `279 
f N "tx_buffer_full" 2 250 ""
f B "tx_buffer_full" 2 250 "int8()" `281 
f N "tx_buffer_full" 2 251 ""
v L "stream" 2 251 "int8" `283 
f B "tx_buffer_full" 2 251 "int8(int8 stream)" `282 
f N "tx_buffer_bytes" 2 252 ""
f B "tx_buffer_bytes" 2 252 "int16()" `284 
f N "tx_buffer_bytes" 2 253 ""
v L "stream" 2 253 "int8" `286 
f B "tx_buffer_bytes" 2 253 "int16(int8 stream)" `285  "#use i2c() Prototypes:"
f N "i2c_read" 2 256 ""
f B "i2c_read" 2 256 "int8()" `287 
f N "i2c_read" 2 257 ""
v L "ack" 2 257 "int8" `289 
f B "i2c_read" 2 257 "int8(int8 ack)" `288 
f N "i2c_read" 2 258 ""
v L "stream" 2 258 "int8" `291 
v L "ack" 2 258 "int8" `292 
f B "i2c_read" 2 258 "int8(int8 stream,int8 ack)" `290 
f N "i2c_write" 2 259 ""
v L "data" 2 259 "int8" `294 
f B "i2c_write" 2 259 "int8(int8 data)" `293 
f N "i2c_write" 2 260 ""
v L "stream" 2 260 "int8" `296 
v L "data" 2 260 "int8" `297 
f B "i2c_write" 2 260 "int8(int8 stream,int8 data)" `295 
f N "i2c_start" 2 261 ""
f B "i2c_start" 2 261 "void()" `298 
f N "i2c_start" 2 262 ""
v L "stream" 2 262 "int8" `300 
f B "i2c_start" 2 262 "void(int8 stream)" `299 
f N "i2c_start" 2 263 ""
v L "stream" 2 263 "int8" `302 
v L "restart" 2 263 "int8" `303 
f B "i2c_start" 2 263 "void(int8 stream,int8 restart)" `301 
f N "i2c_stop" 2 264 ""
f B "i2c_stop" 2 264 "void()" `304 
f N "i2c_stop" 2 265 ""
v L "stream" 2 265 "int8" `306 
f B "i2c_stop" 2 265 "void(int8 stream)" `305 
f N "i2c_isr_state" 2 266 ""
f B "i2c_isr_state" 2 266 "int8()" `307 
f N "i2c_slaveaddr" 2 267 ""
v L "addr" 2 267 "int8" `309 
f B "i2c_slaveaddr" 2 267 "void(int8 addr)" `308 
f N "i2c_slaveaddr" 2 268 ""
v L "stream" 2 268 "int8" `311 
v L "addr" 2 268 "int8" `312 
f B "i2c_slaveaddr" 2 268 "void(int8 stream,int8 addr)" `310 
f N "i2c_poll" 2 269 ""
f B "i2c_poll" 2 269 "int8()" `313 
f N "i2c_poll" 2 270 ""
v L "stream" 2 270 "int8" `315 
f B "i2c_poll" 2 270 "int8(int8 stream)" `314 
f N "i2c_init" 2 271 ""
v L "baud" 2 271 "int32" `317 
f B "i2c_init" 2 271 "void(int32 baud)" `316 
f N "i2c_init" 2 272 ""
v L "stream" 2 272 "int8" `319 
v L "baud" 2 272 "int32" `320 
f B "i2c_init" 2 272 "void(int8 stream,int32 baud)" `318 
f N "i2c_transfer" 2 273 ""
v L "address" 2 273 "int8" `322 
v L "wData" 2 273 "*int8" `323 
v L "wCount" 2 273 "int8" `324 
f B "i2c_transfer" 2 273 "int8(int8 address,*int8 wData,int8 wCount)" `321 
f N "i2c_transfer" 2 274 ""
v L "address" 2 274 "int8" `326 
v L "wData" 2 274 "*int8" `327 
v L "wCount" 2 274 "int8" `328 
v L "rData" 2 274 "*int8" `329 
v L "rCount" 2 274 "*int8" `330 
f B "i2c_transfer" 2 274 "int8(int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `325 
f N "i2c_transfer" 2 275 ""
v L "stream" 2 275 "int8" `332 
v L "address" 2 275 "int8" `333 
v L "wData" 2 275 "*int8" `334 
v L "wCount" 2 275 "int8" `335 
f B "i2c_transfer" 2 275 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `331 
f N "i2c_transfer" 2 276 ""
v L "stream" 2 276 "int8" `337 
v L "address" 2 276 "int8" `338 
v L "wData" 2 276 "*int8" `339 
v L "wCount" 2 276 "int8" `340 
v L "rData" 2 276 "*int8" `341 
v L "rCount" 2 276 "*int8" `342 
f B "i2c_transfer" 2 276 "int8(int8 stream,int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `336 
f N "i2c_transfer_out" 2 277 ""
v L "address" 2 277 "int8" `344 
v L "wData" 2 277 "*int8" `345 
v L "wCount" 2 277 "int8" `346 
f B "i2c_transfer_out" 2 277 "int8(int8 address,*int8 wData,int8 wCount)" `343 
f N "i2c_transfer_out" 2 278 ""
v L "stream" 2 278 "int8" `348 
v L "address" 2 278 "int8" `349 
v L "wData" 2 278 "*int8" `350 
v L "wCount" 2 278 "int8" `351 
f B "i2c_transfer_out" 2 278 "int8(int8 stream,int8 address,*int8 wData,int8 wCount)" `347 
f N "i2c_transfer_in" 2 279 ""
v L "address" 2 279 "int8" `353 
v L "rData" 2 279 "*int8" `354 
v L "rCount" 2 279 "int8" `355 
f B "i2c_transfer_in" 2 279 "int8(int8 address,*int8 rData,int8 rCount)" `352 
f N "i2c_transfer_in" 2 280 ""
v L "stream" 2 280 "int8" `357 
v L "address" 2 280 "int8" `358 
v L "rData" 2 280 "*int8" `359 
v L "rCount" 2 280 "int8" `360 
f B "i2c_transfer_in" 2 280 "int8(int8 stream,int8 address,*int8 rData,int8 rCount)" `356  "#use spi() Prototypes:"
f N "spi_xfer" 2 283 ""
f B "spi_xfer" 2 283 "int8()" `361 
f N "spi_xfer" 2 284 ""
f G "spi_xfer" 2 284 "int16(int8 data)" `362 
f N "spi_xfer" 2 285 ""
f G "spi_xfer" 2 285 "int32(int8 data)" `362 
f N "spi_xfer" 2 286 ""
v L "data" 2 286 "int8" `363 
f B "spi_xfer" 2 286 "int8(int8 data)" `362 
f N "spi_xfer" 2 287 ""
v L "data" 2 287 "int16" `365 
f B "spi_xfer" 2 287 "int16(int16 data)" `364 
f N "spi_xfer" 2 288 ""
v L "data" 2 288 "int32" `367 
f B "spi_xfer" 2 288 "int32(int32 data)" `366 
f N "spi_xfer" 2 289 ""
v L "stream" 2 289 "int8" `369 
v L "data" 2 289 "int8" `370 
f B "spi_xfer" 2 289 "int8(int8 stream,int8 data)" `368 
f N "spi_xfer" 2 290 ""
v L "stream" 2 290 "int8" `372 
v L "data" 2 290 "int16" `373 
f B "spi_xfer" 2 290 "int16(int8 stream,int16 data)" `371 
f N "spi_xfer" 2 291 ""
v L "stream" 2 291 "int8" `375 
v L "data" 2 291 "int32" `376 
f B "spi_xfer" 2 291 "int32(int8 stream,int32 data)" `374 
f N "spi_xfer" 2 292 ""
v L "stream" 2 292 "int8" `378 
v L "data" 2 292 "int8" `379 
v L "bits" 2 292 "int8" `380 
f B "spi_xfer" 2 292 "int8(int8 stream,int8 data,int8 bits)" `377 
f N "spi_xfer" 2 293 ""
v L "stream" 2 293 "int8" `382 
v L "data" 2 293 "int16" `383 
v L "bits" 2 293 "int8" `384 
f B "spi_xfer" 2 293 "int16(int8 stream,int16 data,int8 bits)" `381 
f N "spi_xfer" 2 294 ""
v L "stream" 2 294 "int8" `386 
v L "data" 2 294 "int32" `387 
v L "bits" 2 294 "int8" `388 
f B "spi_xfer" 2 294 "int32(int8 stream,int32 data,int8 bits)" `385 
f N "spi_init" 2 295 ""
v L "baud" 2 295 "int32" `390 
f B "spi_init" 2 295 "void(int32 baud)" `389 
f N "spi_init" 2 296 ""
v L "stream" 2 296 "int8" `392 
v L "baud" 2 296 "int32" `393 
f B "spi_init" 2 296 "void(int8 stream,int32 baud)" `391 
f N "spi_speed" 2 297 ""
v L "baud" 2 297 "int32" `395 
f B "spi_speed" 2 297 "void(int32 baud)" `394 
f N "spi_speed" 2 298 ""
v L "stream" 2 298 "int8" `397 
v L "baud" 2 298 "int32" `398 
f B "spi_speed" 2 298 "void(int8 stream,int32 baud)" `396 
f N "spi_speed" 2 299 ""
v L "stream" 2 299 "int8" `400 
v L "baud" 2 299 "int32" `401 
v L "clock" 2 299 "int32" `402 
f B "spi_speed" 2 299 "void(int8 stream,int32 baud,int32 clock)" `399 
f N "spi_prewrite" 2 300 ""
v L "data" 2 300 "int8" `404 
f B "spi_prewrite" 2 300 "void(int8 data)" `403 
f N "spi_prewrite" 2 301 ""
v L "data" 2 301 "int16" `406 
f B "spi_prewrite" 2 301 "void(int16 data)" `405 
f N "spi_prewrite" 2 302 ""
v L "data" 2 302 "int32" `408 
f B "spi_prewrite" 2 302 "void(int32 data)" `407 
f N "spi_prewrite" 2 303 ""
v L "??65535" 2 303 "int8" `410 
v L "data" 2 303 "int8" `411 
f B "spi_prewrite" 2 303 "void(int8 ,int8 data)" `409 
f N "spi_prewrite" 2 304 ""
v L "??65535" 2 304 "int8" `413 
v L "data" 2 304 "int16" `414 
f B "spi_prewrite" 2 304 "void(int8 ,int16 data)" `412 
f N "spi_prewrite" 2 305 ""
v L "??65535" 2 305 "int8" `416 
v L "data" 2 305 "int32" `417 
f B "spi_prewrite" 2 305 "void(int8 ,int32 data)" `415 
f N "spi_xfer_in" 2 306 ""
f B "spi_xfer_in" 2 306 "int8()" `418 
f N "spi_xfer_in" 2 307 ""
f G "spi_xfer_in" 2 307 "int16(int8 bits)" `419 
f N "spi_xfer_in" 2 308 ""
f G "spi_xfer_in" 2 308 "int32(int8 bits)" `419 
f N "spi_xfer_in" 2 309 ""
v L "bits" 2 309 "int8" `420 
f B "spi_xfer_in" 2 309 "int8(int8 bits)" `419 
f N "spi_xfer_in" 2 310 ""
v L "bits" 2 310 "int8" `422 
f G "spi_xfer_in" 2 310 "int16(int8 bits,int8 bits)" `421 
f N "spi_xfer_in" 2 311 ""
v L "bits" 2 311 "int8" `422 
f G "spi_xfer_in" 2 311 "int32(int8 bits,int8 bits)" `421 
f N "spi_xfer_in" 2 312 ""
v L "stream" 2 312 "int8" `422 
v L "bits" 2 312 "int8" `423 
f B "spi_xfer_in" 2 312 "int8(int8 stream,int8 bits)" `421 
f N "spi_xfer_in" 2 313 ""
v L "stream" 2 313 "int8" `422 
v L "bits" 2 313 "int8" `426 
f G "spi_xfer_in" 2 313 "int16(int8 stream,int8 bits,int16 count)" `424 
f N "spi_xfer_in" 2 314 ""
v L "stream" 2 314 "int8" `422 
v L "bits" 2 314 "int8" `426 
f G "spi_xfer_in" 2 314 "int32(int8 stream,int8 bits,int16 count)" `424 
f N "spi_transfer" 2 315 ""
v L "wData" 2 315 "*int8" `425 
v L "rData" 2 315 "*int8" `426 
v L "count" 2 315 "int16" `427 
f B "spi_transfer" 2 315 "void(*int8 wData,*int8 rData,int16 count)" `424 
f N "spi_transfer" 2 316 ""
v L "stream" 2 316 "int8" `429 
v L "wData" 2 316 "*int8" `430 
v L "rData" 2 316 "*int8" `431 
v L "count" 2 316 "int16" `432 
f B "spi_transfer" 2 316 "void(int8 stream,*int8 wData,*int8 rData,int16 count)" `428 
f N "spi_transfer_write" 2 317 ""
v L "wData" 2 317 "*int8" `434 
v L "count" 2 317 "int16" `435 
f B "spi_transfer_write" 2 317 "void(*int8 wData,int16 count)" `433 
f N "spi_transfer_write" 2 318 ""
v L "stream" 2 318 "int8" `437 
v L "wData" 2 318 "*int8" `438 
v L "count" 2 318 "int16" `439 
f B "spi_transfer_write" 2 318 "void(int8 stream,*int8 wData,int16 count)" `436 
f N "spi_transfer_read" 2 319 ""
v L "rData" 2 319 "*int8" `441 
v L "count" 2 319 "int16" `442 
f B "spi_transfer_read" 2 319 "void(*int8 rData,int16 count)" `440 
f N "spi_transfer_read" 2 320 ""
v L "stream" 2 320 "int8" `444 
v L "rData" 2 320 "*int8" `445 
v L "count" 2 320 "int16" `446 
f B "spi_transfer_read" 2 320 "void(int8 stream,*int8 rData,int16 count)" `443  "#use rtos() Prototypes:"
f N "rtos_run" 2 323 ""
f B "rtos_run" 2 323 "void()" `447 
f N "rtos_yield" 2 324 ""
f B "rtos_yield" 2 324 "void()" `448 
f N "rtos_enable" 2 325 ""
v L "task" 2 325 "int8" `450 
f B "rtos_enable" 2 325 "void(int8 task)" `449 
f N "rtos_disable" 2 326 ""
v L "task" 2 326 "int8" `452 
f B "rtos_disable" 2 326 "void(int8 task)" `451 
f N "rtos_terminate" 2 327 ""
f B "rtos_terminate" 2 327 "void()" `453 
f N "rtos_await" 2 328 ""
v L "flag" 2 328 "int8" `455 
f B "rtos_await" 2 328 "void(int8 flag)" `454 
f N "rtos_wait" 2 329 ""
v L "sem" 2 329 "int8" `457 
f B "rtos_wait" 2 329 "void(int8 sem)" `456 
f N "rtos_signal" 2 330 ""
v L "sem" 2 330 "int8" `459 
f B "rtos_signal" 2 330 "void(int8 sem)" `458 
f N "rtos_msg_send" 2 331 ""
v L "task" 2 331 "int8" `461 
v L "msg" 2 331 "int8" `462 
f B "rtos_msg_send" 2 331 "void(int8 task,int8 msg)" `460 
f N "rtos_msg_read" 2 332 ""
f B "rtos_msg_read" 2 332 "int8()" `463 
f N "rtos_msg_poll" 2 333 ""
f B "rtos_msg_poll" 2 333 "int8()" `464 
f N "rtos_overrun" 2 334 ""
v L "task" 2 334 "int8" `466 
f B "rtos_overrun" 2 334 "int8(int8 task)" `465 
f N "rtos_stats" 2 335 ""
v L "task" 2 335 "int8" `468 
v L "stat" 2 335 "*int8" `469 
f B "rtos_stats" 2 335 "void(int8 task,*int8 stat)" `467  "#use timer() Prototypes:"
f N "get_ticks" 2 338 ""
f B "get_ticks" 2 338 "int8()" `470 
f N "get_ticks" 2 339 ""
f G "get_ticks" 2 339 "int16(int8 stream)" `471 
f N "get_ticks" 2 340 ""
f G "get_ticks" 2 340 "int32(int8 stream)" `471 
f N "get_ticks" 2 341 ""
v L "stream" 2 341 "int8" `472 
f B "get_ticks" 2 341 "int8(int8 stream)" `471 
f N "get_ticks" 2 342 ""
v L "stream" 2 342 "int8" `474 
f G "get_ticks" 2 342 "int16(int8 stream)" `473 
f N "get_ticks" 2 343 ""
v L "stream" 2 343 "int8" `474 
f G "get_ticks" 2 343 "int32(int8 stream)" `473 
f N "set_ticks" 2 344 ""
v L "value" 2 344 "int8" `474 
f B "set_ticks" 2 344 "void(int8 value)" `473 
f N "set_ticks" 2 345 ""
v L "value" 2 345 "int16" `476 
f B "set_ticks" 2 345 "void(int16 value)" `475 
f N "set_ticks" 2 346 ""
v L "value" 2 346 "int32" `478 
f B "set_ticks" 2 346 "void(int32 value)" `477 
f N "set_ticks" 2 347 ""
v L "stream" 2 347 "int8" `480 
v L "value" 2 347 "int8" `481 
f B "set_ticks" 2 347 "void(int8 stream,int8 value)" `479 
f N "set_ticks" 2 348 ""
v L "stream" 2 348 "int8" `483 
v L "value" 2 348 "int16" `484 
f B "set_ticks" 2 348 "void(int8 stream,int16 value)" `482 
f N "set_ticks" 2 349 ""
v L "stream" 2 349 "int8" `486 
v L "value" 2 349 "int32" `487 
f B "set_ticks" 2 349 "void(int8 stream,int32 value)" `485  "#use pwm() Prototypes:"
f N "pwm_on" 2 352 ""
f B "pwm_on" 2 352 "void()" `488 
f N "pwm_on" 2 353 ""
v L "stream" 2 353 "int8" `490 
f B "pwm_on" 2 353 "void(int8 stream)" `489 
f N "pwm_off" 2 354 ""
f B "pwm_off" 2 354 "void()" `491 
f N "pwm_off" 2 355 ""
v L "stream" 2 355 "int8" `493 
f B "pwm_off" 2 355 "void(int8 stream)" `492 
f N "pwm_set_duty" 2 356 ""
v L "duty" 2 356 "int16" `495 
f B "pwm_set_duty" 2 356 "void(int16 duty)" `494 
f N "pwm_set_duty" 2 357 ""
v L "stream" 2 357 "int8" `497 
v L "duty" 2 357 "int16" `498 
f B "pwm_set_duty" 2 357 "void(int8 stream,int16 duty)" `496 
f N "pwm_set_duty_percent" 2 358 ""
v L "percent" 2 358 "int16" `500 
f B "pwm_set_duty_percent" 2 358 "void(int16 percent)" `499 
f N "pwm_set_duty_percent" 2 359 ""
v L "stream" 2 359 "int8" `502 
v L "percent" 2 359 "int16" `503 
f B "pwm_set_duty_percent" 2 359 "void(int8 stream,int16 percent)" `501 
f N "pwm_set_frequency" 2 360 ""
v L "frequency" 2 360 "int32" `505 
f B "pwm_set_frequency" 2 360 "void(int32 frequency)" `504 
f N "pwm_set_frequency" 2 361 ""
v L "stream" 2 361 "int8" `507 
v L "frequency" 2 361 "int32" `508 
f B "pwm_set_frequency" 2 361 "void(int8 stream,int32 frequency)" `506  "#use capture() Prototypes:"
f N "get_capture_time" 2 364 ""
f B "get_capture_time" 2 364 "int16()" `509 
f N "get_capture_time" 2 365 ""
v L "stream" 2 365 "int8" `511 
f B "get_capture_time" 2 365 "int16(int8 stream)" `510 
f N "get_capture_event" 2 366 ""
f B "get_capture_event" 2 366 "int8()" `512 
f N "get_capture_event" 2 367 ""
v L "stream" 2 367 "int8" `514 
f B "get_capture_event" 2 367 "int8(int8 stream)" `513  "Enviroment Prototypes:"
c L "get_capture_event" 2 3 2 "FUNCTION"
f N "goto_address" 2 380 ""
v L "address" 2 380 "int16" `516 
f B "goto_address" 2 380 "void(int16 address)" `515 
f N "label_address" 2 381 ""
v L "label" 2 381 "int16" `518 
f B "label_address" 2 381 "int16(int16 label)" `517  "EEPROM Prototypes:"
d G "__EEADDRESS__" 2 388 "unsigned int8"
f N "read_eeprom" 2 391 ""
v L "address" 2 391 "int8" `520 
f B "read_eeprom" 2 391 "int8(int8 address)" `519 
f N "write_eeprom" 2 392 ""
v L "address" 2 392 "int8" `522 
v L "value" 2 392 "int8" `523 
f B "write_eeprom" 2 392 "void(int8 address,int8 value)" `521  "INT"
c L "write_eeprom" 2 3 4 "FUNCTION"
f N "enable_interrupts" 2 399 ""
v L "interrupt" 2 399 "int32" `525 
f B "enable_interrupts" 2 399 "void(int32 interrupt)" `524 
f N "disable_interrupts" 2 400 ""
v L "interrupt" 2 400 "int32" `527 
f B "disable_interrupts" 2 400 "void(int32 interrupt)" `526 
f N "clear_interrupt" 2 401 ""
v L "interrupt" 2 401 "int32" `529 
f B "clear_interrupt" 2 401 "void(int32 interrupt)" `528 
f N "interrupt_active" 2 402 ""
v L "interrupt" 2 402 "int32" `531 
f B "interrupt_active" 2 402 "int8(int32 interrupt)" `530 
f N "interrupt_enabled" 2 403 ""
v L "interrupt" 2 403 "int32" `533 
f B "interrupt_enabled" 2 403 "int8(int32 interrupt)" `532 
f N "ext_int_edge" 2 404 ""
v L "source" 2 404 "int8" `535 
v L "edge" 2 404 "int8" `536 
f B "ext_int_edge" 2 404 "void(int8 source,int8 edge)" `534 
f N "jump_to_isr" 2 405 ""
v L "address" 2 405 "int16" `538 
f B "jump_to_isr" 2 405 "void(int16 address)" `537  "Constants used in EXT_INT_EDGE() are:"
d G "L_TO_H" 2 407 "0x40"
d G "H_TO_L" 2 408 "0"
d G "GLOBAL" 2 410 "0x0B80"
d G "INT_RTCC" 2 411 "0x000B20"
d G "INT_RB" 2 412 "0x00FF0B08"
d G "INT_EXT_L2H" 2 413 "0x50000B10"
d G "INT_EXT_H2L" 2 414 "0x60000B10"
d G "INT_EXT" 2 415 "0x000B10"
d G "INT_EEPROM" 2 416 "0x000B40"
d G "INT_TIMER0" 2 417 "0x000B20"
F N "main" 0 4 ""
F G "main" 0 5 "void()" `543 
C L "main" 0 10 1 "FUNCTION"
C L "main" 0 10 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_timer_0" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
