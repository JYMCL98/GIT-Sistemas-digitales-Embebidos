CCS PCM C Compiler, Version 5.091, 13314               22-jul.-21 11:09

               Filename:   C:\Users\jymcl\Documents\Chapingo\6 Semestre\Sistemas digitales embebidos\Practica 11\Practica11.lst

               ROM used:   152 words (15%)
                           Largest free fragment is 872
               RAM used:   5 (7%) at main() level
                           6 (9%) worst case
               Stack used: 1 locations
               Stack size: 8

0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <Practica11.h>
.................... #include <16F84.h>
.................... //////////// Standard Header file for the PIC16F84 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F84
.................... 
.................... #list
.................... 
.................... #use delay(crystal=4MHz)
0004:  MOVLW  12
0005:  MOVWF  04
0006:  MOVF   00,W
0007:  BTFSC  03.2
0008:  GOTO   017
0009:  MOVLW  01
000A:  MOVWF  0D
000B:  CLRF   0C
000C:  DECFSZ 0C,F
000D:  GOTO   00C
000E:  DECFSZ 0D,F
000F:  GOTO   00B
0010:  MOVLW  4A
0011:  MOVWF  0C
0012:  DECFSZ 0C,F
0013:  GOTO   012
0014:  GOTO   015
0015:  DECFSZ 00,F
0016:  GOTO   009
0017:  RETURN
.................... 
.................... 
.................... #use standard_io(b)
.................... #define DELAY 400
.................... 
.................... void main()
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
.................... {
....................    set_tris_b(0b00000000);
001B:  MOVLW  00
001C:  BSF    03.5
001D:  MOVWF  06
....................    
....................    while(TRUE)
....................    {
....................       output_b(0x3F);  // Esta línea enciende el display en 0
001E:  CLRF   06
001F:  MOVLW  3F
0020:  BCF    03.5
0021:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
0022:  MOVLW  02
0023:  MOVWF  11
0024:  MOVLW  C8
0025:  MOVWF  12
0026:  CALL   004
0027:  DECFSZ 11,F
0028:  GOTO   024
....................       output_b(0x06);  // Esta línea enciende el display en 1
0029:  BSF    03.5
002A:  CLRF   06
002B:  MOVLW  06
002C:  BCF    03.5
002D:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
002E:  MOVLW  02
002F:  MOVWF  11
0030:  MOVLW  C8
0031:  MOVWF  12
0032:  CALL   004
0033:  DECFSZ 11,F
0034:  GOTO   030
....................       output_b(0x5B);  // Esta línea enciende el display en 2
0035:  BSF    03.5
0036:  CLRF   06
0037:  MOVLW  5B
0038:  BCF    03.5
0039:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
003A:  MOVLW  02
003B:  MOVWF  11
003C:  MOVLW  C8
003D:  MOVWF  12
003E:  CALL   004
003F:  DECFSZ 11,F
0040:  GOTO   03C
....................       output_b(0x4F);  // Esta línea enciende el display en 3
0041:  BSF    03.5
0042:  CLRF   06
0043:  MOVLW  4F
0044:  BCF    03.5
0045:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
0046:  MOVLW  02
0047:  MOVWF  11
0048:  MOVLW  C8
0049:  MOVWF  12
004A:  CALL   004
004B:  DECFSZ 11,F
004C:  GOTO   048
....................       output_b(0x66);  // Esta línea enciende el display en 4
004D:  BSF    03.5
004E:  CLRF   06
004F:  MOVLW  66
0050:  BCF    03.5
0051:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
0052:  MOVLW  02
0053:  MOVWF  11
0054:  MOVLW  C8
0055:  MOVWF  12
0056:  CALL   004
0057:  DECFSZ 11,F
0058:  GOTO   054
....................       output_b(0x6D);  // Esta línea enciende el display en 5
0059:  BSF    03.5
005A:  CLRF   06
005B:  MOVLW  6D
005C:  BCF    03.5
005D:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
005E:  MOVLW  02
005F:  MOVWF  11
0060:  MOVLW  C8
0061:  MOVWF  12
0062:  CALL   004
0063:  DECFSZ 11,F
0064:  GOTO   060
....................       output_b(0x7D);  // Esta línea enciende el display en 6
0065:  BSF    03.5
0066:  CLRF   06
0067:  MOVLW  7D
0068:  BCF    03.5
0069:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
006A:  MOVLW  02
006B:  MOVWF  11
006C:  MOVLW  C8
006D:  MOVWF  12
006E:  CALL   004
006F:  DECFSZ 11,F
0070:  GOTO   06C
....................       output_b(0x07);  // Esta línea enciende el display en 7
0071:  BSF    03.5
0072:  CLRF   06
0073:  MOVLW  07
0074:  BCF    03.5
0075:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
0076:  MOVLW  02
0077:  MOVWF  11
0078:  MOVLW  C8
0079:  MOVWF  12
007A:  CALL   004
007B:  DECFSZ 11,F
007C:  GOTO   078
....................       output_b(0x7F);  // Esta línea enciende el display en 8
007D:  BSF    03.5
007E:  CLRF   06
007F:  MOVLW  7F
0080:  BCF    03.5
0081:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
0082:  MOVLW  02
0083:  MOVWF  11
0084:  MOVLW  C8
0085:  MOVWF  12
0086:  CALL   004
0087:  DECFSZ 11,F
0088:  GOTO   084
....................       output_b(0x67);  // Esta línea enciende el display en 9
0089:  BSF    03.5
008A:  CLRF   06
008B:  MOVLW  67
008C:  BCF    03.5
008D:  MOVWF  06
....................       delay_ms(DELAY);  // Esperamos 400 ms
008E:  MOVLW  02
008F:  MOVWF  11
0090:  MOVLW  C8
0091:  MOVWF  12
0092:  CALL   004
0093:  DECFSZ 11,F
0094:  GOTO   090
0095:  BSF    03.5
0096:  GOTO   01E
....................       
....................    }
.................... 
.................... }
0097:  SLEEP

Configuration Fuses:
   Word  1: 3FF1   XT NOWDT PUT NOPROTECT
