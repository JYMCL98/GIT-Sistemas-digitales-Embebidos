CCS PCM C Compiler, Version 5.015, 5967               30-jun-20 16:24

               Filename:   C:\Users\CQ43\Documents\Curso Pic CCS\21-30\Servo Pot\Servo Pot.lst

               ROM used:   1164 words (14%)
                           Largest free fragment is 2048
               RAM used:   38 (10%) at main() level
                           81 (22%) worst case
               Stack used: 3 locations (2 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  04
0001:  MOVWF  0A
0002:  GOTO   423
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
*
0051:  MOVLW  8E
0052:  MOVWF  77
0053:  MOVF   41,W
0054:  MOVWF  78
0055:  MOVF   40,W
0056:  MOVWF  79
0057:  CLRF   7A
0058:  MOVF   78,F
0059:  BTFSS  03.2
005A:  GOTO   065
005B:  MOVF   79,W
005C:  MOVWF  78
005D:  CLRF   79
005E:  MOVLW  08
005F:  SUBWF  77,F
0060:  MOVF   78,F
0061:  BTFSS  03.2
0062:  GOTO   065
0063:  CLRF   77
0064:  GOTO   06D
0065:  BCF    03.0
0066:  BTFSC  78.7
0067:  GOTO   06C
0068:  RLF    79,F
0069:  RLF    78,F
006A:  DECF   77,F
006B:  GOTO   065
006C:  BCF    78.7
006D:  BCF    0A.3
006E:  BCF    0A.4
006F:  GOTO   456 (RETURN)
0070:  MOVLW  80
0071:  BTFSC  03.1
0072:  XORWF  61,F
0073:  CLRF   66
0074:  CLRF   67
0075:  MOVF   5D,W
0076:  MOVWF  65
0077:  MOVF   61,W
0078:  XORWF  65,F
0079:  MOVF   5C,W
007A:  BTFSC  03.2
007B:  GOTO   160
007C:  MOVWF  64
007D:  MOVWF  77
007E:  MOVF   60,W
007F:  BTFSC  03.2
0080:  GOTO   169
0081:  SUBWF  64,F
0082:  BTFSC  03.2
0083:  GOTO   105
0084:  BTFSS  03.0
0085:  GOTO   0C3
0086:  MOVF   61,W
0087:  MOVWF  6A
0088:  BSF    6A.7
0089:  MOVF   62,W
008A:  MOVWF  69
008B:  MOVF   63,W
008C:  MOVWF  68
008D:  CLRF   67
008E:  BCF    03.0
008F:  RRF    6A,F
0090:  RRF    69,F
0091:  RRF    68,F
0092:  RRF    67,F
0093:  DECFSZ 64,F
0094:  GOTO   08D
0095:  BTFSS  65.7
0096:  GOTO   09A
0097:  BSF    66.0
0098:  GOTO   17D
0099:  BCF    66.0
009A:  BCF    64.0
009B:  BSF    66.4
009C:  MOVLW  5F
009D:  MOVWF  04
009E:  BCF    03.7
009F:  GOTO   192
00A0:  BCF    66.4
00A1:  BTFSC  65.7
00A2:  GOTO   0AD
00A3:  BTFSS  64.0
00A4:  GOTO   0B8
00A5:  RRF    6A,F
00A6:  RRF    69,F
00A7:  RRF    68,F
00A8:  RRF    67,F
00A9:  INCF   77,F
00AA:  BTFSC  03.2
00AB:  GOTO   178
00AC:  GOTO   0B8
00AD:  BTFSC  6A.7
00AE:  GOTO   0BB
00AF:  BCF    03.0
00B0:  RLF    67,F
00B1:  RLF    68,F
00B2:  RLF    69,F
00B3:  RLF    6A,F
00B4:  DECF   77,F
00B5:  BTFSC  03.2
00B6:  GOTO   178
00B7:  GOTO   0AD
00B8:  BSF    66.6
00B9:  GOTO   125
00BA:  BCF    66.6
00BB:  MOVF   5D,W
00BC:  MOVWF  65
00BD:  BTFSS  65.7
00BE:  GOTO   0C1
00BF:  BSF    6A.7
00C0:  GOTO   171
00C1:  BCF    6A.7
00C2:  GOTO   171
00C3:  MOVF   60,W
00C4:  MOVWF  64
00C5:  MOVWF  77
00C6:  MOVF   5C,W
00C7:  SUBWF  64,F
00C8:  MOVF   5D,W
00C9:  MOVWF  6A
00CA:  BSF    6A.7
00CB:  MOVF   5E,W
00CC:  MOVWF  69
00CD:  MOVF   5F,W
00CE:  MOVWF  68
00CF:  CLRF   67
00D0:  BCF    03.0
00D1:  RRF    6A,F
00D2:  RRF    69,F
00D3:  RRF    68,F
00D4:  RRF    67,F
00D5:  DECFSZ 64,F
00D6:  GOTO   0CF
00D7:  BTFSS  65.7
00D8:  GOTO   0DC
00D9:  BSF    66.1
00DA:  GOTO   17D
00DB:  BCF    66.1
00DC:  BCF    64.0
00DD:  BSF    66.5
00DE:  MOVLW  63
00DF:  MOVWF  04
00E0:  BCF    03.7
00E1:  GOTO   192
00E2:  BCF    66.5
00E3:  BTFSC  65.7
00E4:  GOTO   0EF
00E5:  BTFSS  64.0
00E6:  GOTO   0FA
00E7:  RRF    6A,F
00E8:  RRF    69,F
00E9:  RRF    68,F
00EA:  RRF    67,F
00EB:  INCF   77,F
00EC:  BTFSC  03.2
00ED:  GOTO   178
00EE:  GOTO   0FA
00EF:  BTFSC  6A.7
00F0:  GOTO   0FD
00F1:  BCF    03.0
00F2:  RLF    67,F
00F3:  RLF    68,F
00F4:  RLF    69,F
00F5:  RLF    6A,F
00F6:  DECF   77,F
00F7:  BTFSC  03.2
00F8:  GOTO   178
00F9:  GOTO   0EF
00FA:  BSF    66.7
00FB:  GOTO   125
00FC:  BCF    66.7
00FD:  MOVF   61,W
00FE:  MOVWF  65
00FF:  BTFSS  65.7
0100:  GOTO   103
0101:  BSF    6A.7
0102:  GOTO   171
0103:  BCF    6A.7
0104:  GOTO   171
0105:  MOVF   61,W
0106:  MOVWF  6A
0107:  BSF    6A.7
0108:  MOVF   62,W
0109:  MOVWF  69
010A:  MOVF   63,W
010B:  MOVWF  68
010C:  BTFSS  65.7
010D:  GOTO   112
010E:  BCF    6A.7
010F:  BSF    66.2
0110:  GOTO   17D
0111:  BCF    66.2
0112:  CLRF   67
0113:  BCF    64.0
0114:  MOVLW  5F
0115:  MOVWF  04
0116:  BCF    03.7
0117:  GOTO   192
0118:  BTFSC  65.7
0119:  GOTO   13B
011A:  MOVF   5D,W
011B:  MOVWF  65
011C:  BTFSS  64.0
011D:  GOTO   125
011E:  RRF    6A,F
011F:  RRF    69,F
0120:  RRF    68,F
0121:  RRF    67,F
0122:  INCF   77,F
0123:  BTFSC  03.2
0124:  GOTO   178
0125:  BTFSS  67.7
0126:  GOTO   136
0127:  INCF   68,F
0128:  BTFSS  03.2
0129:  GOTO   136
012A:  INCF   69,F
012B:  BTFSS  03.2
012C:  GOTO   136
012D:  INCF   6A,F
012E:  BTFSS  03.2
012F:  GOTO   136
0130:  RRF    6A,F
0131:  RRF    69,F
0132:  RRF    68,F
0133:  INCF   77,F
0134:  BTFSC  03.2
0135:  GOTO   178
0136:  BTFSC  66.6
0137:  GOTO   0BA
0138:  BTFSC  66.7
0139:  GOTO   0FC
013A:  GOTO   15A
013B:  MOVLW  80
013C:  XORWF  6A,F
013D:  BTFSS  6A.7
013E:  GOTO   143
013F:  GOTO   17D
0140:  MOVF   61,W
0141:  MOVWF  65
0142:  GOTO   150
0143:  MOVF   5D,W
0144:  MOVWF  65
0145:  MOVF   6A,F
0146:  BTFSS  03.2
0147:  GOTO   150
0148:  MOVF   69,F
0149:  BTFSS  03.2
014A:  GOTO   150
014B:  MOVF   68,F
014C:  BTFSS  03.2
014D:  GOTO   150
014E:  CLRF   77
014F:  GOTO   171
0150:  BTFSC  6A.7
0151:  GOTO   15A
0152:  BCF    03.0
0153:  RLF    67,F
0154:  RLF    68,F
0155:  RLF    69,F
0156:  RLF    6A,F
0157:  DECFSZ 77,F
0158:  GOTO   150
0159:  GOTO   178
015A:  BTFSS  65.7
015B:  GOTO   15E
015C:  BSF    6A.7
015D:  GOTO   171
015E:  BCF    6A.7
015F:  GOTO   171
0160:  MOVF   60,W
0161:  MOVWF  77
0162:  MOVF   61,W
0163:  MOVWF  6A
0164:  MOVF   62,W
0165:  MOVWF  69
0166:  MOVF   63,W
0167:  MOVWF  68
0168:  GOTO   171
0169:  MOVF   5C,W
016A:  MOVWF  77
016B:  MOVF   5D,W
016C:  MOVWF  6A
016D:  MOVF   5E,W
016E:  MOVWF  69
016F:  MOVF   5F,W
0170:  MOVWF  68
0171:  MOVF   6A,W
0172:  MOVWF  78
0173:  MOVF   69,W
0174:  MOVWF  79
0175:  MOVF   68,W
0176:  MOVWF  7A
0177:  GOTO   1B0
0178:  CLRF   77
0179:  CLRF   78
017A:  CLRF   79
017B:  CLRF   7A
017C:  GOTO   1B0
017D:  CLRF   67
017E:  COMF   68,F
017F:  COMF   69,F
0180:  COMF   6A,F
0181:  COMF   67,F
0182:  INCF   67,F
0183:  BTFSS  03.2
0184:  GOTO   18B
0185:  INCF   68,F
0186:  BTFSS  03.2
0187:  GOTO   18B
0188:  INCF   69,F
0189:  BTFSC  03.2
018A:  INCF   6A,F
018B:  BTFSC  66.0
018C:  GOTO   099
018D:  BTFSC  66.1
018E:  GOTO   0DB
018F:  BTFSC  66.2
0190:  GOTO   111
0191:  GOTO   140
0192:  MOVF   00,W
0193:  ADDWF  68,F
0194:  BTFSS  03.0
0195:  GOTO   19C
0196:  INCF   69,F
0197:  BTFSS  03.2
0198:  GOTO   19C
0199:  INCF   6A,F
019A:  BTFSC  03.2
019B:  BSF    64.0
019C:  DECF   04,F
019D:  MOVF   00,W
019E:  ADDWF  69,F
019F:  BTFSS  03.0
01A0:  GOTO   1A4
01A1:  INCF   6A,F
01A2:  BTFSC  03.2
01A3:  BSF    64.0
01A4:  DECF   04,F
01A5:  MOVF   00,W
01A6:  BTFSS  00.7
01A7:  XORLW  80
01A8:  ADDWF  6A,F
01A9:  BTFSC  03.0
01AA:  BSF    64.0
01AB:  BTFSC  66.4
01AC:  GOTO   0A0
01AD:  BTFSC  66.5
01AE:  GOTO   0E2
01AF:  GOTO   118
01B0:  RETURN
*
01ED:  MOVF   5C,W
01EE:  BTFSC  03.2
01EF:  GOTO   25D
01F0:  MOVWF  64
01F1:  MOVF   60,W
01F2:  BTFSC  03.2
01F3:  GOTO   25D
01F4:  ADDWF  64,F
01F5:  BTFSC  03.0
01F6:  GOTO   1FE
01F7:  MOVLW  7F
01F8:  SUBWF  64,F
01F9:  BTFSS  03.0
01FA:  GOTO   25D
01FB:  BTFSC  03.2
01FC:  GOTO   25D
01FD:  GOTO   202
01FE:  MOVLW  81
01FF:  ADDWF  64,F
0200:  BTFSC  03.0
0201:  GOTO   25D
0202:  MOVF   64,W
0203:  MOVWF  77
0204:  CLRF   78
0205:  CLRF   79
0206:  CLRF   7A
0207:  MOVF   5D,W
0208:  MOVWF  68
0209:  BSF    68.7
020A:  MOVF   5E,W
020B:  MOVWF  67
020C:  MOVF   5F,W
020D:  MOVWF  66
020E:  MOVLW  18
020F:  MOVWF  64
0210:  CLRF   65
0211:  BTFSS  66.0
0212:  GOTO   22B
0213:  MOVF   63,W
0214:  ADDWF  7A,F
0215:  BTFSS  03.0
0216:  GOTO   21D
0217:  INCF   79,F
0218:  BTFSS  03.2
0219:  GOTO   21D
021A:  INCF   78,F
021B:  BTFSC  03.2
021C:  BSF    65.7
021D:  MOVF   62,W
021E:  ADDWF  79,F
021F:  BTFSS  03.0
0220:  GOTO   224
0221:  INCF   78,F
0222:  BTFSC  03.2
0223:  BSF    65.7
0224:  MOVF   61,W
0225:  MOVWF  5E
0226:  BSF    5E.7
0227:  MOVF   5E,W
0228:  ADDWF  78,F
0229:  BTFSC  03.0
022A:  BSF    65.7
022B:  RLF    65,F
022C:  RRF    78,F
022D:  RRF    79,F
022E:  RRF    7A,F
022F:  RRF    68,F
0230:  RRF    67,F
0231:  RRF    66,F
0232:  BCF    03.0
0233:  DECFSZ 64,F
0234:  GOTO   210
0235:  MOVLW  01
0236:  ADDWF  77,F
0237:  BTFSC  03.0
0238:  GOTO   25D
0239:  BTFSC  78.7
023A:  GOTO   242
023B:  RLF    68,F
023C:  RLF    7A,F
023D:  RLF    79,F
023E:  RLF    78,F
023F:  DECF   77,F
0240:  BTFSC  03.2
0241:  GOTO   25D
0242:  BTFSS  68.7
0243:  GOTO   253
0244:  INCF   7A,F
0245:  BTFSS  03.2
0246:  GOTO   253
0247:  INCF   79,F
0248:  BTFSS  03.2
0249:  GOTO   253
024A:  INCF   78,F
024B:  BTFSS  03.2
024C:  GOTO   253
024D:  RRF    78,F
024E:  RRF    79,F
024F:  RRF    7A,F
0250:  INCF   77,F
0251:  BTFSC  03.2
0252:  GOTO   25D
0253:  MOVF   5D,W
0254:  MOVWF  65
0255:  MOVF   61,W
0256:  XORWF  65,F
0257:  BTFSS  65.7
0258:  GOTO   25B
0259:  BSF    78.7
025A:  GOTO   261
025B:  BCF    78.7
025C:  GOTO   261
025D:  CLRF   77
025E:  CLRF   78
025F:  CLRF   79
0260:  CLRF   7A
*
028B:  MOVF   5C,W
028C:  BTFSC  03.2
028D:  GOTO   350
028E:  MOVWF  68
028F:  MOVF   60,W
0290:  BTFSC  03.2
0291:  GOTO   350
0292:  SUBWF  68,F
0293:  BTFSS  03.0
0294:  GOTO   29A
0295:  MOVLW  7F
0296:  ADDWF  68,F
0297:  BTFSC  03.0
0298:  GOTO   350
0299:  GOTO   2A0
029A:  MOVLW  81
029B:  SUBWF  68,F
029C:  BTFSS  03.0
029D:  GOTO   350
029E:  BTFSC  03.2
029F:  GOTO   350
02A0:  MOVF   68,W
02A1:  MOVWF  77
02A2:  CLRF   78
02A3:  CLRF   79
02A4:  CLRF   7A
02A5:  CLRF   67
02A6:  MOVF   5D,W
02A7:  MOVWF  66
02A8:  BSF    66.7
02A9:  MOVF   5E,W
02AA:  MOVWF  65
02AB:  MOVF   5F,W
02AC:  MOVWF  64
02AD:  MOVLW  19
02AE:  MOVWF  68
02AF:  MOVF   63,W
02B0:  SUBWF  64,F
02B1:  BTFSC  03.0
02B2:  GOTO   2C3
02B3:  MOVLW  01
02B4:  SUBWF  65,F
02B5:  BTFSC  03.0
02B6:  GOTO   2C3
02B7:  SUBWF  66,F
02B8:  BTFSC  03.0
02B9:  GOTO   2C3
02BA:  SUBWF  67,F
02BB:  BTFSC  03.0
02BC:  GOTO   2C3
02BD:  INCF   67,F
02BE:  INCF   66,F
02BF:  INCF   65,F
02C0:  MOVF   63,W
02C1:  ADDWF  64,F
02C2:  GOTO   2F5
02C3:  MOVF   62,W
02C4:  SUBWF  65,F
02C5:  BTFSC  03.0
02C6:  GOTO   2DE
02C7:  MOVLW  01
02C8:  SUBWF  66,F
02C9:  BTFSC  03.0
02CA:  GOTO   2DE
02CB:  SUBWF  67,F
02CC:  BTFSC  03.0
02CD:  GOTO   2DE
02CE:  INCF   67,F
02CF:  INCF   66,F
02D0:  MOVF   62,W
02D1:  ADDWF  65,F
02D2:  MOVF   63,W
02D3:  ADDWF  64,F
02D4:  BTFSS  03.0
02D5:  GOTO   2F5
02D6:  INCF   65,F
02D7:  BTFSS  03.2
02D8:  GOTO   2F5
02D9:  INCF   66,F
02DA:  BTFSS  03.2
02DB:  GOTO   2F5
02DC:  INCF   67,F
02DD:  GOTO   2F5
02DE:  MOVF   61,W
02DF:  IORLW  80
02E0:  SUBWF  66,F
02E1:  BTFSC  03.0
02E2:  GOTO   2F4
02E3:  MOVLW  01
02E4:  SUBWF  67,F
02E5:  BTFSC  03.0
02E6:  GOTO   2F4
02E7:  INCF   67,F
02E8:  MOVF   61,W
02E9:  IORLW  80
02EA:  ADDWF  66,F
02EB:  MOVF   62,W
02EC:  ADDWF  65,F
02ED:  BTFSS  03.0
02EE:  GOTO   2D2
02EF:  INCF   66,F
02F0:  BTFSS  03.2
02F1:  GOTO   2D2
02F2:  INCF   67,F
02F3:  GOTO   2D2
02F4:  BSF    7A.0
02F5:  DECFSZ 68,F
02F6:  GOTO   2F8
02F7:  GOTO   303
02F8:  BCF    03.0
02F9:  RLF    64,F
02FA:  RLF    65,F
02FB:  RLF    66,F
02FC:  RLF    67,F
02FD:  BCF    03.0
02FE:  RLF    7A,F
02FF:  RLF    79,F
0300:  RLF    78,F
0301:  RLF    69,F
0302:  GOTO   2AF
0303:  BTFSS  69.0
0304:  GOTO   30B
0305:  BCF    03.0
0306:  RRF    78,F
0307:  RRF    79,F
0308:  RRF    7A,F
0309:  RRF    69,F
030A:  GOTO   30E
030B:  DECF   77,F
030C:  BTFSC  03.2
030D:  GOTO   350
030E:  BTFSC  69.7
030F:  GOTO   337
0310:  BCF    03.0
0311:  RLF    64,F
0312:  RLF    65,F
0313:  RLF    66,F
0314:  RLF    67,F
0315:  MOVF   63,W
0316:  SUBWF  64,F
0317:  BTFSC  03.0
0318:  GOTO   323
0319:  MOVLW  01
031A:  SUBWF  65,F
031B:  BTFSC  03.0
031C:  GOTO   323
031D:  SUBWF  66,F
031E:  BTFSC  03.0
031F:  GOTO   323
0320:  SUBWF  67,F
0321:  BTFSS  03.0
0322:  GOTO   346
0323:  MOVF   62,W
0324:  SUBWF  65,F
0325:  BTFSC  03.0
0326:  GOTO   32E
0327:  MOVLW  01
0328:  SUBWF  66,F
0329:  BTFSC  03.0
032A:  GOTO   32E
032B:  SUBWF  67,F
032C:  BTFSS  03.0
032D:  GOTO   346
032E:  MOVF   61,W
032F:  IORLW  80
0330:  SUBWF  66,F
0331:  BTFSC  03.0
0332:  GOTO   337
0333:  MOVLW  01
0334:  SUBWF  67,F
0335:  BTFSS  03.0
0336:  GOTO   346
0337:  INCF   7A,F
0338:  BTFSS  03.2
0339:  GOTO   346
033A:  INCF   79,F
033B:  BTFSS  03.2
033C:  GOTO   346
033D:  INCF   78,F
033E:  BTFSS  03.2
033F:  GOTO   346
0340:  INCF   77,F
0341:  BTFSC  03.2
0342:  GOTO   350
0343:  RRF    78,F
0344:  RRF    79,F
0345:  RRF    7A,F
0346:  MOVF   5D,W
0347:  MOVWF  68
0348:  MOVF   61,W
0349:  XORWF  68,F
034A:  BTFSS  68.7
034B:  GOTO   34E
034C:  BSF    78.7
034D:  GOTO   354
034E:  BCF    78.7
034F:  GOTO   354
0350:  CLRF   77
0351:  CLRF   78
0352:  CLRF   79
0353:  CLRF   7A
*
0371:  MOVLW  8E
0372:  MOVWF  77
0373:  MOVF   40,W
0374:  SUBWF  77,F
0375:  MOVF   41,W
0376:  MOVWF  79
0377:  MOVF   42,W
0378:  MOVWF  78
0379:  BSF    79.7
037A:  MOVF   77,F
037B:  BTFSC  03.2
037C:  GOTO   388
037D:  BCF    03.0
037E:  MOVF   79,F
037F:  BTFSS  03.2
0380:  GOTO   384
0381:  MOVF   78,F
0382:  BTFSC  03.2
0383:  GOTO   388
0384:  RRF    79,F
0385:  RRF    78,F
0386:  DECFSZ 77,F
0387:  GOTO   37D
0388:  BTFSS  41.7
0389:  GOTO   38F
038A:  COMF   78,F
038B:  COMF   79,F
038C:  INCF   78,F
038D:  BTFSC  03.2
038E:  INCF   79,F
038F:  BCF    0A.3
0390:  BCF    0A.4
0391:  GOTO   485 (RETURN)
*
03BE:  MOVLW  10
03BF:  MOVWF  53
03C0:  CLRF   77
03C1:  CLRF   7A
03C2:  RRF    50,F
03C3:  RRF    4F,F
03C4:  BTFSS  03.0
03C5:  GOTO   3CC
03C6:  MOVF   51,W
03C7:  ADDWF  77,F
03C8:  BTFSC  03.0
03C9:  INCF   7A,F
03CA:  MOVF   52,W
03CB:  ADDWF  7A,F
03CC:  RRF    7A,F
03CD:  RRF    77,F
03CE:  RRF    79,F
03CF:  RRF    78,F
03D0:  DECFSZ 53,F
03D1:  GOTO   3C2
*
03EB:  CLRF   78
03EC:  CLRF   79
03ED:  CLRF   77
03EE:  CLRF   7A
03EF:  MOVF   52,W
03F0:  BTFSS  03.2
03F1:  GOTO   3F5
03F2:  MOVF   51,W
03F3:  BTFSC  03.2
03F4:  GOTO   40F
03F5:  MOVLW  10
03F6:  MOVWF  53
03F7:  BCF    03.0
03F8:  RLF    4F,F
03F9:  RLF    50,F
03FA:  RLF    77,F
03FB:  RLF    7A,F
03FC:  MOVF   52,W
03FD:  SUBWF  7A,W
03FE:  BTFSS  03.2
03FF:  GOTO   402
0400:  MOVF   51,W
0401:  SUBWF  77,W
0402:  BTFSS  03.0
0403:  GOTO   40B
0404:  MOVF   51,W
0405:  SUBWF  77,F
0406:  BTFSS  03.0
0407:  DECF   7A,F
0408:  MOVF   52,W
0409:  SUBWF  7A,F
040A:  BSF    03.0
040B:  RLF    78,F
040C:  RLF    79,F
040D:  DECFSZ 53,F
040E:  GOTO   3F7
....................  
.................... #list 
....................  
.................... #device ADC = 10 
.................... #fuses HS,NOWDT,NOPROTECT,NOPUT,NOLVP,BROWNOUT 
.................... #use delay(clock=20M) 
.................... #use standard_io(D) 
....................  
.................... #define use_servo_1           // Utiliza el servo 1 
.................... #define servo_1 PIN_D0        // Pin del servo 1 
.................... #include <servo_st.c>         // Libreria para el manejo de servomotores 
.................... #define v_min 7 
.................... #define v_max 28 
.................... #define SERVO_HARDWARE 
....................  
.................... int i[11]; 
.................... int data_s[11]; 
....................  
.................... #ifdef SERVO_HARDWARE 
.................... #INT_TIMER0 
.................... void timer_0() 
.................... { 
.................... 	#ifdef use_servo_1 
.................... 	i[0]++; 
*
002F:  INCFSZ 27,F
....................     if(i[0] == 0) output_high(servo_1); 
0030:  GOTO   035
0031:  BSF    03.5
0032:  BCF    08.0
0033:  BCF    03.5
0034:  BSF    08.0
....................     if(i[0] == data_s[0]) output_low(servo_1); 
0035:  MOVF   32,W
0036:  SUBWF  27,W
0037:  BTFSS  03.2
0038:  GOTO   03D
0039:  BSF    03.5
003A:  BCF    08.0
003B:  BCF    03.5
003C:  BCF    08.0
....................     #endif 
....................  
....................     #ifdef use_servo_2 
.................... 	i[1]++; 
....................     if(i[1] == 0) output_high(servo_2); 
....................     if(i[1] == data_s[1]) output_low(servo_2); 
....................     #endif 
....................  
....................     #ifdef use_servo_3 
.................... 	i[2]++; 
....................     if(i[2] == 0) output_high(servo_3); 
....................     if(i[2] == data_s[2]) output_low(servo_3); 
....................     #endif 
....................  
....................     #ifdef use_servo_4 
.................... 	i[3]++; 
....................     if(i[3] == 0) output_high(servo_4); 
....................     if(i[3] == data_s[3]) output_low(servo_4); 
....................     #endif 
....................  
....................     #ifdef use_servo_5 
.................... 	i[4]++; 
....................     if(i[4] == 0) output_high(servo_5); 
....................     if(i[4] == data_s[4]) output_low(servo_5); 
....................     #endif 
....................  
....................     #ifdef use_servo_6 
.................... 	i[5]++; 
....................     if(i[5] == 0) output_high(servo_6); 
....................     if(i[5] == data_s[5]) output_low(servo_6); 
....................     #endif 
....................  
....................     #ifdef use_servo_7 
.................... 	i[6]++; 
....................     if(i[6] == 0) output_high(servo_7); 
....................     if(i[6] == data_s[6]) output_low(servo_7); 
....................     #endif 
....................  
....................     #ifdef use_servo_8 
.................... 	i[7]++; 
....................     if(i[7] == 0) output_high(servo_8); 
....................     if(i[7] == data_s[7]) output_low(servo_8); 
....................     #endif 
....................  
....................     #ifdef use_servo_9 
.................... 	i[8]++; 
....................     if(i[8] == 0) output_high(servo_9); 
....................     if(i[8] == data_s[8]) output_low(servo_9); 
....................     #endif 
....................  
....................     #ifdef use_servo_10 
.................... 	i[9]++; 
....................     if(i[9] == 0) output_high(servo_10); 
....................     if(i[9] == data_s[9]) output_low(servo_10); 
....................     #endif 
....................     set_timer0(158); 
003D:  MOVLW  9E
003E:  MOVWF  01
.................... } 
003F:  BCF    0B.2
0040:  BCF    0A.3
0041:  BCF    0A.4
0042:  GOTO   01B
.................... #endif 
....................  
.................... void servo_init() 
.................... { 
....................     setup_timer_0(RTCC_INTERNAL | RTCC_DIV_4); 
0043:  BSF    03.5
0044:  MOVF   01,W
0045:  ANDLW  C0
0046:  IORLW  01
0047:  MOVWF  01
....................     set_timer0(158); 
0048:  MOVLW  9E
0049:  BCF    03.5
004A:  MOVWF  01
....................     enable_interrupts(INT_TIMER0); 
004B:  BSF    0B.5
....................     enable_interrupts(GLOBAL); 
004C:  MOVLW  C0
004D:  IORWF  0B,F
004E:  BCF    0A.3
004F:  BCF    0A.4
0050:  GOTO   43B (RETURN)
.................... } 
....................  
.................... long map_int(int16 vl, int16 eMin, int16 eMax, int16 sMin, int16 sMax) 
.................... { 
....................    return((((vl-eMin)*(sMax-sMin))/(eMax-eMin))+sMin); 
*
03A0:  MOVF   43,W
03A1:  SUBWF  41,W
03A2:  MOVWF  4B
03A3:  MOVF   42,W
03A4:  MOVWF  4C
03A5:  MOVF   44,W
03A6:  BTFSS  03.0
03A7:  INCFSZ 44,W
03A8:  SUBWF  4C,F
03A9:  MOVF   47,W
03AA:  SUBWF  49,W
03AB:  MOVWF  77
03AC:  MOVF   4A,W
03AD:  MOVWF  7A
03AE:  MOVF   48,W
03AF:  BTFSS  03.0
03B0:  INCFSZ 48,W
03B1:  SUBWF  7A,F
03B2:  MOVF   77,W
03B3:  MOVWF  4D
03B4:  MOVF   7A,W
03B5:  MOVWF  4E
03B6:  MOVF   4C,W
03B7:  MOVWF  50
03B8:  MOVF   4B,W
03B9:  MOVWF  4F
03BA:  MOVF   4E,W
03BB:  MOVWF  52
03BC:  MOVF   4D,W
03BD:  MOVWF  51
*
03D2:  MOVF   79,W
03D3:  MOVWF  4C
03D4:  MOVF   78,W
03D5:  MOVWF  4B
03D6:  MOVF   43,W
03D7:  SUBWF  45,W
03D8:  MOVWF  77
03D9:  MOVF   46,W
03DA:  MOVWF  7A
03DB:  MOVF   44,W
03DC:  BTFSS  03.0
03DD:  INCFSZ 44,W
03DE:  SUBWF  7A,F
03DF:  MOVF   77,W
03E0:  MOVWF  4D
03E1:  MOVF   7A,W
03E2:  MOVWF  4E
03E3:  MOVF   4C,W
03E4:  MOVWF  50
03E5:  MOVF   4B,W
03E6:  MOVWF  4F
03E7:  MOVF   4E,W
03E8:  MOVWF  52
03E9:  MOVF   4D,W
03EA:  MOVWF  51
*
040F:  MOVF   79,W
0410:  MOVWF  4C
0411:  MOVF   78,W
0412:  MOVWF  4B
0413:  MOVF   47,W
0414:  ADDWF  78,W
0415:  MOVWF  78
0416:  MOVF   79,W
0417:  MOVWF  7A
0418:  MOVF   48,W
0419:  BTFSC  03.0
041A:  INCFSZ 48,W
041B:  ADDWF  7A,F
041C:  MOVF   7A,W
041D:  MOVWF  79
.................... } 
....................  
.................... #ifdef use_servo_1 
.................... void servo_1_write(int angle1) 
.................... { 
....................    data_s[0] = map_int(angle1, 0, 180, v_min, v_max); 
*
0392:  CLRF   42
0393:  MOVF   40,W
0394:  MOVWF  41
0395:  CLRF   44
0396:  CLRF   43
0397:  CLRF   46
0398:  MOVLW  B4
0399:  MOVWF  45
039A:  CLRF   48
039B:  MOVLW  07
039C:  MOVWF  47
039D:  CLRF   4A
039E:  MOVLW  1C
039F:  MOVWF  49
*
041E:  MOVF   78,W
041F:  MOVWF  32
0420:  BCF    0A.3
0421:  BCF    0A.4
0422:  GOTO   48A (RETURN)
.................... } 
.................... #endif 
....................  
.................... #ifdef use_servo_2 
.................... void servo_2_write(int angle2) 
.................... { 
....................    data_s[1] = map_int(angle2, 0, 180, v_min, v_max); 
.................... } 
.................... #endif 
....................  
.................... #ifdef use_servo_3 
.................... void servo_3_write(int angle3) 
.................... { 
....................    data_s[2] = map_int(angle3, 0, 180, v_min, v_max); 
.................... } 
.................... #endif 
....................  
.................... #ifdef use_servo_4 
.................... void servo_4_write(int angle4) 
.................... { 
....................    data_s[3] = map_int(angle4, 0, 180, v_min, v_max); 
.................... } 
.................... #endif 
....................  
.................... #ifdef use_servo_5 
.................... void servo_5_write(int angle5) 
.................... { 
....................    data_s[4] = map_int(angle5, 0, 180, v_min, v_max); 
.................... } 
.................... #endif 
....................  
.................... #ifdef use_servo_6 
.................... void servo_6_write(int angle6) 
.................... { 
....................    data_s[5] = map_int(angle6, 0, 180, v_min, v_max); 
.................... } 
.................... #endif 
....................  
.................... #ifdef use_servo_7 
.................... void servo_7_write(int angle7) 
.................... { 
....................    data_s[6] = map_int(angle7, 0, 180, v_min, v_max); 
.................... } 
.................... #endif 
....................  
.................... #ifdef use_servo_8 
.................... void servo_8_write(int angle8) 
.................... { 
....................    data_s[7] = map_int(angle8, 0, 180, v_min, v_max); 
.................... } 
.................... #endif 
....................  
.................... #ifdef use_servo_9 
.................... void servo_9_write(int angle9) 
.................... { 
....................    data_s[8] = map_int(angle9, 0, 180, v_min, v_max); 
.................... } 
.................... #endif 
....................  
.................... #ifdef use_servo_10 
.................... void servo_10_write(int angle10) 
.................... { 
....................    data_s[9] = map_int(angle10, 0, 180, v_min, v_max); 
.................... } 
.................... #endif 
....................  
.................... #include <map_function.c>     // Libreria para conversiones 
.................... // #include <map_function.c> 
....................  
.................... double map(float valor, float entradaMin, float entradaMax, float salidaMin, float salidaMax) 
.................... { 
....................    return((((valor-entradaMin)*(salidaMax-salidaMin))/(entradaMax-entradaMin))+salidaMin); 
*
01B1:  BSF    03.1
01B2:  MOVF   47,W
01B3:  MOVWF  5F
01B4:  MOVF   46,W
01B5:  MOVWF  5E
01B6:  MOVF   45,W
01B7:  MOVWF  5D
01B8:  MOVF   44,W
01B9:  MOVWF  5C
01BA:  MOVF   4B,W
01BB:  MOVWF  63
01BC:  MOVF   4A,W
01BD:  MOVWF  62
01BE:  MOVF   49,W
01BF:  MOVWF  61
01C0:  MOVF   48,W
01C1:  MOVWF  60
01C2:  CALL   070
01C3:  MOVF   7A,W
01C4:  MOVWF  5B
01C5:  MOVF   79,W
01C6:  MOVWF  5A
01C7:  MOVF   78,W
01C8:  MOVWF  59
01C9:  MOVF   77,W
01CA:  MOVWF  58
01CB:  BSF    03.1
01CC:  MOVF   57,W
01CD:  MOVWF  5F
01CE:  MOVF   56,W
01CF:  MOVWF  5E
01D0:  MOVF   55,W
01D1:  MOVWF  5D
01D2:  MOVF   54,W
01D3:  MOVWF  5C
01D4:  MOVF   53,W
01D5:  MOVWF  63
01D6:  MOVF   52,W
01D7:  MOVWF  62
01D8:  MOVF   51,W
01D9:  MOVWF  61
01DA:  MOVF   50,W
01DB:  MOVWF  60
01DC:  CALL   070
01DD:  MOVF   5B,W
01DE:  MOVWF  5F
01DF:  MOVF   5A,W
01E0:  MOVWF  5E
01E1:  MOVF   59,W
01E2:  MOVWF  5D
01E3:  MOVF   58,W
01E4:  MOVWF  5C
01E5:  MOVF   7A,W
01E6:  MOVWF  63
01E7:  MOVF   79,W
01E8:  MOVWF  62
01E9:  MOVF   78,W
01EA:  MOVWF  61
01EB:  MOVF   77,W
01EC:  MOVWF  60
*
0261:  MOVF   7A,W
0262:  MOVWF  5B
0263:  MOVF   79,W
0264:  MOVWF  5A
0265:  MOVF   78,W
0266:  MOVWF  59
0267:  MOVF   77,W
0268:  MOVWF  58
0269:  BSF    03.1
026A:  MOVF   4F,W
026B:  MOVWF  5F
026C:  MOVF   4E,W
026D:  MOVWF  5E
026E:  MOVF   4D,W
026F:  MOVWF  5D
0270:  MOVF   4C,W
0271:  MOVWF  5C
0272:  MOVF   4B,W
0273:  MOVWF  63
0274:  MOVF   4A,W
0275:  MOVWF  62
0276:  MOVF   49,W
0277:  MOVWF  61
0278:  MOVF   48,W
0279:  MOVWF  60
027A:  CALL   070
027B:  MOVF   5B,W
027C:  MOVWF  5F
027D:  MOVF   5A,W
027E:  MOVWF  5E
027F:  MOVF   59,W
0280:  MOVWF  5D
0281:  MOVF   58,W
0282:  MOVWF  5C
0283:  MOVF   7A,W
0284:  MOVWF  63
0285:  MOVF   79,W
0286:  MOVWF  62
0287:  MOVF   78,W
0288:  MOVWF  61
0289:  MOVF   77,W
028A:  MOVWF  60
*
0354:  MOVF   7A,W
0355:  MOVWF  5B
0356:  MOVF   79,W
0357:  MOVWF  5A
0358:  MOVF   78,W
0359:  MOVWF  59
035A:  MOVF   77,W
035B:  MOVWF  58
035C:  BCF    03.1
035D:  MOVF   7A,W
035E:  MOVWF  5F
035F:  MOVF   79,W
0360:  MOVWF  5E
0361:  MOVF   78,W
0362:  MOVWF  5D
0363:  MOVF   77,W
0364:  MOVWF  5C
0365:  MOVF   53,W
0366:  MOVWF  63
0367:  MOVF   52,W
0368:  MOVWF  62
0369:  MOVF   51,W
036A:  MOVWF  61
036B:  MOVF   50,W
036C:  MOVWF  60
036D:  CALL   070
036E:  BCF    0A.3
036F:  BCF    0A.4
0370:  GOTO   47C (RETURN)
.................... } 
....................  
.................... long map16(int16 valor, int16 entradaMin, int16 entradaMax, int16 salidaMin, int16 salidaMax) 
.................... { 
....................    return((((valor-entradaMin)*(salidaMax-salidaMin))/(entradaMax-entradaMin))+salidaMin); 
.................... } 
....................  
....................  
.................... void main() 
*
0423:  MOVF   03,W
0424:  ANDLW  1F
0425:  MOVWF  03
0426:  BSF    03.5
0427:  BSF    1F.0
0428:  BSF    1F.1
0429:  BSF    1F.2
042A:  BCF    1F.3
042B:  MOVLW  07
042C:  MOVWF  1C
042D:  BCF    03.7
.................... { 
....................    setup_adc_ports(AN0); 
042E:  BCF    1F.0
042F:  BSF    1F.1
0430:  BSF    1F.2
0431:  BSF    1F.3
....................    setup_adc(adc_clock_internal); 
0432:  BCF    1F.6
0433:  BCF    03.5
0434:  BSF    1F.6
0435:  BSF    1F.7
0436:  BSF    03.5
0437:  BSF    1F.7
0438:  BCF    03.5
0439:  BSF    1F.0
....................    servo_init();              // Inicializa el servo 
043A:  GOTO   043
....................     
....................    while(true) 
....................    { 
....................       set_adc_channel(0); 
043B:  MOVLW  00
043C:  MOVWF  78
043D:  MOVF   1F,W
043E:  ANDLW  C7
043F:  IORWF  78,W
0440:  MOVWF  1F
....................       delay_us(2); 
0441:  MOVLW  02
0442:  MOVWF  77
0443:  DECFSZ 77,F
0444:  GOTO   443
0445:  GOTO   446
0446:  NOP
....................       long valor_adc = read_adc(); 
....................       int angulo = map(valor_adc, 0, 1023, 0, 180); 
0447:  BSF    1F.2
0448:  BTFSC  1F.2
0449:  GOTO   448
044A:  MOVF   1E,W
044B:  MOVWF  7A
044C:  BSF    03.5
044D:  MOVF   1E,W
044E:  BCF    03.5
044F:  MOVWF  3D
0450:  MOVF   1E,W
0451:  MOVWF  3E
0452:  MOVWF  41
0453:  MOVF   3D,W
0454:  MOVWF  40
0455:  GOTO   051
0456:  MOVF   7A,W
0457:  MOVWF  43
0458:  MOVF   79,W
0459:  MOVWF  42
045A:  MOVF   78,W
045B:  MOVWF  41
045C:  MOVF   77,W
045D:  MOVWF  40
045E:  MOVF   7A,W
045F:  MOVWF  47
0460:  MOVF   79,W
0461:  MOVWF  46
0462:  MOVF   78,W
0463:  MOVWF  45
0464:  MOVF   77,W
0465:  MOVWF  44
0466:  CLRF   4B
0467:  CLRF   4A
0468:  CLRF   49
0469:  CLRF   48
046A:  CLRF   4F
046B:  MOVLW  C0
046C:  MOVWF  4E
046D:  MOVLW  7F
046E:  MOVWF  4D
046F:  MOVLW  88
0470:  MOVWF  4C
0471:  CLRF   53
0472:  CLRF   52
0473:  CLRF   51
0474:  CLRF   50
0475:  CLRF   57
0476:  CLRF   56
0477:  MOVLW  34
0478:  MOVWF  55
0479:  MOVLW  86
047A:  MOVWF  54
047B:  GOTO   1B1
047C:  MOVF   7A,W
047D:  MOVWF  43
047E:  MOVF   79,W
047F:  MOVWF  42
0480:  MOVF   78,W
0481:  MOVWF  41
0482:  MOVF   77,W
0483:  MOVWF  40
0484:  GOTO   371
0485:  MOVF   78,W
0486:  MOVWF  3F
....................       servo_1_write(angulo); 
0487:  MOVF   3F,W
0488:  MOVWF  40
0489:  GOTO   392
048A:  GOTO   43B
....................    } 
.................... } 
048B:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
