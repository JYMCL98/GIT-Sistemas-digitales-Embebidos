CCS PCM C Compiler, Version 5.091, 13314               31-may.-21 15:57

               Filename:   C:\Users\jymcl\Documents\Chapingo\6 Semestre\Sistemas digitales embebidos\Practica 8\practica8.lst

               ROM used:   213 words (21%)
                           Largest free fragment is 811
               RAM used:   5 (7%) at main() level
                           6 (9%) worst case
               Stack used: 1 locations
               Stack size: 8

0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <practica8.h>
.................... #include <16F84A.h>
.................... //////////// Standard Header file for the PIC16F84A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F84A
.................... 
.................... #list
.................... 
.................... #use delay(crystal=4MHz)
0004:  MOVLW  12
0005:  MOVWF  04
0006:  MOVF   00,W
0007:  BTFSC  03.2
0008:  GOTO   017
0009:  MOVLW  01
000A:  MOVWF  0D
000B:  CLRF   0C
000C:  DECFSZ 0C,F
000D:  GOTO   00C
000E:  DECFSZ 0D,F
000F:  GOTO   00B
0010:  MOVLW  4A
0011:  MOVWF  0C
0012:  DECFSZ 0C,F
0013:  GOTO   012
0014:  GOTO   015
0015:  DECFSZ 00,F
0016:  GOTO   009
0017:  RETURN
.................... 
.................... 
.................... 
.................... 
.................... void main()
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
.................... {
.................... 
....................    while(TRUE)
....................    {
....................       output_high(PIN_B0);
001B:  BSF    03.5
001C:  BCF    06.0
001D:  BCF    03.5
001E:  BSF    06.0
....................       output_high(PIN_B7);
001F:  BSF    03.5
0020:  BCF    06.7
0021:  BCF    03.5
0022:  BSF    06.7
....................       delay_ms(500);
0023:  MOVLW  02
0024:  MOVWF  11
0025:  MOVLW  FA
0026:  MOVWF  12
0027:  CALL   004
0028:  DECFSZ 11,F
0029:  GOTO   025
....................       
....................       output_high(PIN_B1);
002A:  BSF    03.5
002B:  BCF    06.1
002C:  BCF    03.5
002D:  BSF    06.1
....................       output_high(PIN_B6);
002E:  BSF    03.5
002F:  BCF    06.6
0030:  BCF    03.5
0031:  BSF    06.6
....................       delay_ms(500);
0032:  MOVLW  02
0033:  MOVWF  11
0034:  MOVLW  FA
0035:  MOVWF  12
0036:  CALL   004
0037:  DECFSZ 11,F
0038:  GOTO   034
....................       
....................       output_high(PIN_B2);
0039:  BSF    03.5
003A:  BCF    06.2
003B:  BCF    03.5
003C:  BSF    06.2
....................       output_high(PIN_B5);
003D:  BSF    03.5
003E:  BCF    06.5
003F:  BCF    03.5
0040:  BSF    06.5
....................       delay_ms(500);
0041:  MOVLW  02
0042:  MOVWF  11
0043:  MOVLW  FA
0044:  MOVWF  12
0045:  CALL   004
0046:  DECFSZ 11,F
0047:  GOTO   043
....................       
....................       output_high(PIN_B3);
0048:  BSF    03.5
0049:  BCF    06.3
004A:  BCF    03.5
004B:  BSF    06.3
....................       output_high(PIN_B4);
004C:  BSF    03.5
004D:  BCF    06.4
004E:  BCF    03.5
004F:  BSF    06.4
....................       delay_ms(500);
0050:  MOVLW  02
0051:  MOVWF  11
0052:  MOVLW  FA
0053:  MOVWF  12
0054:  CALL   004
0055:  DECFSZ 11,F
0056:  GOTO   052
....................       
....................       output_low(PIN_B0);
0057:  BSF    03.5
0058:  BCF    06.0
0059:  BCF    03.5
005A:  BCF    06.0
....................       output_low(PIN_B1);
005B:  BSF    03.5
005C:  BCF    06.1
005D:  BCF    03.5
005E:  BCF    06.1
....................       output_low(PIN_B2);
005F:  BSF    03.5
0060:  BCF    06.2
0061:  BCF    03.5
0062:  BCF    06.2
....................       output_low(PIN_B3);
0063:  BSF    03.5
0064:  BCF    06.3
0065:  BCF    03.5
0066:  BCF    06.3
....................       output_low(PIN_B4);
0067:  BSF    03.5
0068:  BCF    06.4
0069:  BCF    03.5
006A:  BCF    06.4
....................       output_low(PIN_B5);
006B:  BSF    03.5
006C:  BCF    06.5
006D:  BCF    03.5
006E:  BCF    06.5
....................       output_low(PIN_B6);
006F:  BSF    03.5
0070:  BCF    06.6
0071:  BCF    03.5
0072:  BCF    06.6
....................       output_low(PIN_B7);
0073:  BSF    03.5
0074:  BCF    06.7
0075:  BCF    03.5
0076:  BCF    06.7
....................       
....................       
....................       output_high(PIN_B3);
0077:  BSF    03.5
0078:  BCF    06.3
0079:  BCF    03.5
007A:  BSF    06.3
....................       output_high(PIN_B4);
007B:  BSF    03.5
007C:  BCF    06.4
007D:  BCF    03.5
007E:  BSF    06.4
....................       delay_ms(500);
007F:  MOVLW  02
0080:  MOVWF  11
0081:  MOVLW  FA
0082:  MOVWF  12
0083:  CALL   004
0084:  DECFSZ 11,F
0085:  GOTO   081
....................       
....................       output_high(PIN_B2);
0086:  BSF    03.5
0087:  BCF    06.2
0088:  BCF    03.5
0089:  BSF    06.2
....................       output_high(PIN_B5);
008A:  BSF    03.5
008B:  BCF    06.5
008C:  BCF    03.5
008D:  BSF    06.5
....................       delay_ms(500);
008E:  MOVLW  02
008F:  MOVWF  11
0090:  MOVLW  FA
0091:  MOVWF  12
0092:  CALL   004
0093:  DECFSZ 11,F
0094:  GOTO   090
....................       
....................       output_high(PIN_B1);
0095:  BSF    03.5
0096:  BCF    06.1
0097:  BCF    03.5
0098:  BSF    06.1
....................       output_high(PIN_B6);
0099:  BSF    03.5
009A:  BCF    06.6
009B:  BCF    03.5
009C:  BSF    06.6
....................       delay_ms(500);
009D:  MOVLW  02
009E:  MOVWF  11
009F:  MOVLW  FA
00A0:  MOVWF  12
00A1:  CALL   004
00A2:  DECFSZ 11,F
00A3:  GOTO   09F
....................       
....................       output_high(PIN_B0);
00A4:  BSF    03.5
00A5:  BCF    06.0
00A6:  BCF    03.5
00A7:  BSF    06.0
....................       output_high(PIN_B7);
00A8:  BSF    03.5
00A9:  BCF    06.7
00AA:  BCF    03.5
00AB:  BSF    06.7
....................       delay_ms(500);
00AC:  MOVLW  02
00AD:  MOVWF  11
00AE:  MOVLW  FA
00AF:  MOVWF  12
00B0:  CALL   004
00B1:  DECFSZ 11,F
00B2:  GOTO   0AE
....................       
....................       output_low(PIN_B0);
00B3:  BSF    03.5
00B4:  BCF    06.0
00B5:  BCF    03.5
00B6:  BCF    06.0
....................       output_low(PIN_B1);
00B7:  BSF    03.5
00B8:  BCF    06.1
00B9:  BCF    03.5
00BA:  BCF    06.1
....................       output_low(PIN_B2);
00BB:  BSF    03.5
00BC:  BCF    06.2
00BD:  BCF    03.5
00BE:  BCF    06.2
....................       output_low(PIN_B3);
00BF:  BSF    03.5
00C0:  BCF    06.3
00C1:  BCF    03.5
00C2:  BCF    06.3
....................       output_low(PIN_B4);
00C3:  BSF    03.5
00C4:  BCF    06.4
00C5:  BCF    03.5
00C6:  BCF    06.4
....................       output_low(PIN_B5);
00C7:  BSF    03.5
00C8:  BCF    06.5
00C9:  BCF    03.5
00CA:  BCF    06.5
....................       output_low(PIN_B6);
00CB:  BSF    03.5
00CC:  BCF    06.6
00CD:  BCF    03.5
00CE:  BCF    06.6
....................       output_low(PIN_B7);
00CF:  BSF    03.5
00D0:  BCF    06.7
00D1:  BCF    03.5
00D2:  BCF    06.7
00D3:  GOTO   01B
....................       
....................       //TODO: User Code
....................    }
.................... 
.................... }
00D4:  SLEEP

Configuration Fuses:
   Word  1: 3FF1   XT NOWDT PUT NOPROTECT
